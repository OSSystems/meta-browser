Upstream-Status: Inappropriate

GCC (tested rocko's 7.3.0) cannot find these intrinsics and the build fails:

../../third_party/skia/src/opts/SkRasterPipeline_opts.h: In function 'neon::F neon::from_half(neon::U16)':
../../third_party/skia/src/opts/SkRasterPipeline_opts.h:657:26: error: cannot convert 'neon::U16 {aka short unsigned int}' to 'float16x4_    t {aka __vector(4) __    fp16}' for argument '1' to '
float32x4_t vcvt_f32_f16(float16x4_t)'
     return vcvt_f32_f16(h);
                          ^
../../third_party/skia/src/opts/SkRasterPipeline_opts.h: In function 'neon::U16 neon::to_half(neon::F)':
../../third_party/skia/src/opts/SkRasterPipeline_opts.h:677:26: error: cannot convert 'neon::F {aka float}' to 'float32x4_t {aka __vector    (4) float}' for argum    ent '1' to 'float16x4_t vcvt
_f16_f32(float32x4_t)'
     return vcvt_f16_f32(f);
                          ^

Upstream seems to have had similar issues according to
https://skia-review.googlesource.com/c/skia/+/84222, but there is no fix at the
moment.

Signed-off-by: Raphael Kubo da Costa <raphael.kubo.da.costa@intel.com>
---
 third_party/skia/src/opts/SkRasterPipeline_opts.h | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/third_party/skia/src/opts/SkRasterPipeline_opts.h b/third_party/skia/src/opts/SkRasterPipeline_opts.h
index 2abc0b5914..85891a6c4c 100644
--- a/third_party/skia/src/opts/SkRasterPipeline_opts.h
+++ b/third_party/skia/src/opts/SkRasterPipeline_opts.h
@@ -729,10 +729,7 @@ SI F approx_powf(F x, F y) {
 }
 
 SI F from_half(U16 h) {
-#if defined(SK_CPU_ARM64) && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-    return vcvt_f32_f16(h);
-
-#elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
+#if defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
     return _mm256_cvtph_ps(h);
 
 #else
@@ -749,10 +746,7 @@ SI F from_half(U16 h) {
 }
 
 SI U16 to_half(F f) {
-#if defined(SK_CPU_ARM64) && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-    return vcvt_f16_f32(f);
-
-#elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
+#if defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
     return _mm256_cvtps_ph(f, _MM_FROUND_CUR_DIRECTION);
 
 #else
--
2.20.1
