Remove the GN settings done for clang that conflict with OE

clang cross compiler that is build with meta-clang has lot of these
settings built-in and specifying them here confuses the compiler e.g.
--target option and -no-canonical-prefixes options result in clang not
finding the headers in target sysroot

CRC32_ARMV8_CRC32 is aarch64 so enable it only for arm64

Upstream-Status: Inappropriate [OE-Specific]

Signed-off-by: Khem Raj <raj.khem@gmail.com>

Index: chromium-ozone-wayland-dev-64.0.3274.0.r517731.igalia.1/build/config/compiler/BUILD.gn
===================================================================
--- chromium-ozone-wayland-dev-64.0.3274.0.r517731.igalia.1.orig/build/config/compiler/BUILD.gn
+++ chromium-ozone-wayland-dev-64.0.3274.0.r517731.igalia.1/build/config/compiler/BUILD.gn
@@ -457,9 +457,6 @@ config("compiler") {
   #
   # TODO(thakis): Figure out if this should be the default, and expose in
   # clang-cl if not.
-  if (is_clang && !is_win && !is_nacl) {
-    cflags += [ "-no-canonical-prefixes" ]
-  }
 
   # C11/C++11 compiler flags setup.
   # ---------------------------
@@ -626,10 +623,6 @@ config("compiler_cpu_abi") {
         ]
       }
     } else if (current_cpu == "arm") {
-      if (is_clang && !is_android && !is_nacl) {
-        cflags += [ "--target=arm-linux-gnueabihf" ]
-        ldflags += [ "--target=arm-linux-gnueabihf" ]
-      }
       if (!is_nacl) {
         cflags += [
           "-march=$arm_arch",
@@ -640,19 +633,12 @@ config("compiler_cpu_abi") {
         cflags += [ "-mtune=$arm_tune" ]
       }
     } else if (current_cpu == "arm64") {
-      if (is_clang && !is_android && !is_nacl && !is_fuchsia) {
-        cflags += [ "--target=aarch64-linux-gnu" ]
-        ldflags += [ "--target=aarch64-linux-gnu" ]
-      }
     } else if (current_cpu == "mipsel" && !is_nacl) {
       if (custom_toolchain == "") {
         if (is_clang) {
           if (is_android) {
             cflags += [ "--target=mipsel-linux-android" ]
             ldflags += [ "--target=mipsel-linux-android" ]
-          } else {
-            cflags += [ "--target=mipsel-linux-gnu" ]
-            ldflags += [ "--target=mipsel-linux-gnu" ]
           }
         } else {
           cflags += [ "-EL" ]
@@ -739,10 +725,7 @@ config("compiler_cpu_abi") {
       cflags += [ "-m${mips_float_abi}-float" ]
     } else if (current_cpu == "mips" && !is_nacl) {
       if (custom_toolchain == "") {
-        if (is_clang) {
-          cflags += [ "--target=mips-linux-gnu" ]
-          ldflags += [ "--target=mips-linux-gnu" ]
-        } else {
+        if (!is_clang) {
           cflags += [ "-EB" ]
           ldflags += [ "-EB" ]
         }
@@ -787,9 +770,6 @@ config("compiler_cpu_abi") {
           if (is_android) {
             cflags += [ "--target=mips64el-linux-android" ]
             ldflags += [ "--target=mips64el-linux-android" ]
-          } else {
-            cflags += [ "--target=mips64el-linux-gnuabi64" ]
-            ldflags += [ "--target=mips64el-linux-gnuabi64" ]
           }
         } else {
           cflags += [
@@ -837,10 +817,7 @@ config("compiler_cpu_abi") {
       }
     } else if (current_cpu == "mips64") {
       if (custom_toolchain == "") {
-        if (is_clang) {
-          cflags += [ "--target=mips64-linux-gnuabi64" ]
-          ldflags += [ "--target=mips64-linux-gnuabi64" ]
-        } else {
+        if (!is_clang) {
           cflags += [
             "-EB",
             "-mabi=64",
