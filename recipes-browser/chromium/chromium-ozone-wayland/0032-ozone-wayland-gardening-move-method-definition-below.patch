Upstream-Status: Backport

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 3542e88b5f0167e83aebf61d495a27ba4dea002c Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Tue, 5 Mar 2019 13:42:01 +0000
Subject: [PATCH 32/42] [ozone/wayland] gardening: move method definition
 below.

This change does not bring any functionality changes.

TBR=rjkroege@chromium.org

Bug: 578890
Change-Id: Ibbd06a33c41b63274c99473f79bb21eafdf6fa67
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1503592
Commit-Queue: Maksim Sisov <msisov@igalia.com>
Reviewed-by: Maksim Sisov <msisov@igalia.com>
Cr-Commit-Position: refs/heads/master@{#637671}
---
 .../wayland/wayland_surface_factory.cc        | 37 ++++++++++---------
 1 file changed, 20 insertions(+), 17 deletions(-)

diff --git a/ui/ozone/platform/wayland/wayland_surface_factory.cc b/ui/ozone/platform/wayland/wayland_surface_factory.cc
index dc4d7195d8f2..f3f49a2d5968 100644
--- a/ui/ozone/platform/wayland/wayland_surface_factory.cc
+++ b/ui/ozone/platform/wayland/wayland_surface_factory.cc
@@ -36,23 +36,7 @@ class GLOzoneEGLWayland : public GLOzoneEGL {
       gfx::AcceleratedWidget widget) override;
 
   scoped_refptr<gl::GLSurface> CreateSurfacelessViewGLSurface(
-      gfx::AcceleratedWidget window) override {
-    // Only EGLGLES2 is supported with surfaceless view gl.
-    if (gl::GetGLImplementation() != gl::kGLImplementationEGLGLES2)
-      return nullptr;
-
-#if defined(WAYLAND_GBM)
-    // If there is a gbm device available, use surfaceless gl surface.
-    if (!connection_->gbm_device())
-      return nullptr;
-    return gl::InitializeGLSurface(new GbmSurfacelessWayland(
-        static_cast<WaylandSurfaceFactory*>(
-            OzonePlatform::GetInstance()->GetSurfaceFactoryOzone()),
-        window));
-#else
-    return nullptr;
-#endif
-  }
+      gfx::AcceleratedWidget window) override;
 
   scoped_refptr<gl::GLSurface> CreateOffscreenGLSurface(
       const gfx::Size& size) override;
@@ -86,6 +70,25 @@ scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateViewGLSurface(
   return gl::InitializeGLSurface(new GLSurfaceWayland(std::move(egl_window)));
 }
 
+scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateSurfacelessViewGLSurface(
+    gfx::AcceleratedWidget window) {
+  // Only EGLGLES2 is supported with surfaceless view gl.
+  if (gl::GetGLImplementation() != gl::kGLImplementationEGLGLES2)
+    return nullptr;
+
+#if defined(WAYLAND_GBM)
+  // If there is a gbm device available, use surfaceless gl surface.
+  if (!connection_->gbm_device())
+    return nullptr;
+  return gl::InitializeGLSurface(new GbmSurfacelessWayland(
+      static_cast<WaylandSurfaceFactory*>(
+          OzonePlatform::GetInstance()->GetSurfaceFactoryOzone()),
+      window));
+#else
+  return nullptr;
+#endif
+}
+
 scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateOffscreenGLSurface(
     const gfx::Size& size) {
   if (gl::GLSurfaceEGL::IsEGLSurfacelessContextSupported() &&
-- 
2.17.1

