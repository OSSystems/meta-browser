Upstream-Status: Submitted [https://crrev.com/c/1448172]

* Submitted to upstream, waiting approval

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From c6737c4bcaf04545f1cc98d3b40c9c6436ebf5ea Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Thu, 31 Jan 2019 14:09:06 +0200
Subject: [PATCH 13/16] [ozone/wayland] Fix default window bounds.

If a previous browsing session is empty, WindowSizer calculates
default window bounds by calling GetDisplayMatching with empty bounds.

Previously, WaylandScreen returned invalid display, which resulted
in extrimely small windows. Now, instead of returning invalid
display, the nearest display to match rect is returned.

Also, if match rect does not intersect with any of the displays,
a primary display is returned.

We are doing the same as ScreenBase::GetDisplayMatching now.

Bug: 927274, 875161
Change-Id: I567cba549fb90b9d5db58b3af3bed04598848cdb
---
 ui/ozone/platform/wayland/wayland_screen.cc          | 7 ++++---
 ui/ozone/platform/wayland/wayland_screen_unittest.cc | 9 +++++++--
 2 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/ui/ozone/platform/wayland/wayland_screen.cc b/ui/ozone/platform/wayland/wayland_screen.cc
index b0c1bc41ad0e..a7a0b8b1172e 100644
--- a/ui/ozone/platform/wayland/wayland_screen.cc
+++ b/ui/ozone/platform/wayland/wayland_screen.cc
@@ -166,12 +166,13 @@ display::Display WaylandScreen::GetDisplayNearestPoint(
 
 display::Display WaylandScreen::GetDisplayMatching(
     const gfx::Rect& match_rect) const {
+  if (match_rect.IsEmpty())
+    return GetDisplayNearestPoint(match_rect.origin());
+
   const display::Display* display_matching =
       display::FindDisplayWithBiggestIntersection(display_list_.displays(),
                                                   match_rect);
-  if (!display_matching)
-    return display::Display();
-  return *display_matching;
+  return display_matching ? *display_matching : GetPrimaryDisplay();
 }
 
 void WaylandScreen::AddObserver(display::DisplayObserver* observer) {
diff --git a/ui/ozone/platform/wayland/wayland_screen_unittest.cc b/ui/ozone/platform/wayland/wayland_screen_unittest.cc
index e05ec3645ef0..bd2a30c58589 100644
--- a/ui/ozone/platform/wayland/wayland_screen_unittest.cc
+++ b/ui/ozone/platform/wayland/wayland_screen_unittest.cc
@@ -344,9 +344,10 @@ TEST_P(WaylandScreenTest, GetDisplayMatching) {
 
   Sync();
 
-  // The match rect is located outside the displays.
+  // The match rect is located outside the displays. Primary display must be
+  // returned.
   EXPECT_EQ(
-      display::kInvalidDisplayId,
+      primary_display.id(),
       platform_screen_->GetDisplayMatching(gfx::Rect(1024, 0, 10, 10)).id());
 
   // At least some of the pixels are located on the display.
@@ -359,6 +360,10 @@ TEST_P(WaylandScreenTest, GetDisplayMatching) {
       second_display.id(),
       platform_screen_->GetDisplayMatching(gfx::Rect(1023, 695, 10, 10)).id());
 
+  // Empty rect results in primary display.
+  EXPECT_EQ(primary_display.id(),
+            platform_screen_->GetDisplayMatching(gfx::Rect(0, 0, 0, 0)).id());
+
   platform_screen_->RemoveObserver(&observer);
 }
 
-- 
2.17.1

