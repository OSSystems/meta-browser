Upstream-Status: Backport

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 82c793e35e17701e202e0fe35ce855a44e6cba34 Mon Sep 17 00:00:00 2001
From: Nick Diego Yamane <nickdiego@igalia.com>
Date: Wed, 20 Feb 2019 15:55:01 +0000
Subject: [PATCH 21/42] ozone/wayland: xkbcommon: Fix layout switching

Wayland compositors let clients know about keyboard
layout index currently set using the "group" parameter
in wl_keyboard::modifiers event[1]. Currently it is used
to update the libxkbcommon modifiers mask and generate
the corresponding event flags value, but is not used later
on when translating keysyms into UTF characters (when
xkb_state_update_modifiers function is used again). That
makes the keys to be converted using incorrect layout.

To fix it, this CL does the following:
1. Rename GetModifierFlags -> UpdateModifiers; modifying it
   to be non-const and then be able to cache 'group' value
   (coming from wl_keyboard::modifiers event) into the new
   layout_index_ class variable;
2. In XkbLookup method, pass in the previously cached
   layout_index_ when calling xkb_state_update_modifiers
   function, making the characters to be correctly
   converted when xkb_state_key_get_utf32 is called.

[1] https://wayland.freedesktop.org/docs/html/apa.html#protocol-spec-wl_keyboard

Bug: 921947
Change-Id: I5758da5b771bd46c6a43250439b63b0911f51fbb
Reviewed-on: https://chromium-review.googlesource.com/c/1474041
Reviewed-by: Michael Spang <spang@chromium.org>
Reviewed-by: Kevin Schoedel <kpschoedel@chromium.org>
Commit-Queue: Nick Diego Yamane <nickdiego@igalia.com>
Cr-Commit-Position: refs/heads/master@{#633718}
---
 .../layout/xkb/xkb_keyboard_layout_engine.cc  | 19 ++++++++++++-------
 .../layout/xkb/xkb_keyboard_layout_engine.h   | 10 ++++++----
 ui/ozone/platform/wayland/wayland_keyboard.cc |  2 +-
 3 files changed, 19 insertions(+), 12 deletions(-)

diff --git a/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.cc b/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.cc
index 765a158958ce..ea8ddaadf85c 100644
--- a/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.cc
+++ b/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.cc
@@ -837,6 +837,7 @@ void XkbKeyboardLayoutEngine::SetKeymap(xkb_keymap* keymap) {
       xkb_flag_map_.push_back(e);
     }
   }
+  layout_index_ = 0;
 
   // Update num lock mask.
   num_lock_mod_mask_ = 0;
@@ -858,10 +859,10 @@ xkb_mod_mask_t XkbKeyboardLayoutEngine::EventFlagsToXkbFlags(
   return xkb_flags;
 }
 
-int XkbKeyboardLayoutEngine::GetModifierFlags(uint32_t depressed,
-                                              uint32_t latched,
-                                              uint32_t locked,
-                                              uint32_t group) const {
+int XkbKeyboardLayoutEngine::UpdateModifiers(uint32_t depressed,
+                                             uint32_t latched,
+                                             uint32_t locked,
+                                             uint32_t group) {
   auto* state = xkb_state_.get();
   xkb_state_update_mask(state, depressed, latched, locked, 0, 0, group);
   auto component = static_cast<xkb_state_component>(XKB_STATE_MODS_DEPRESSED |
@@ -872,6 +873,7 @@ int XkbKeyboardLayoutEngine::GetModifierFlags(uint32_t depressed,
     if (xkb_state_mod_index_is_active(state, entry.xkb_index, component))
       ui_flags |= entry.ui_flag;
   }
+  layout_index_ = group;
   return ui_flags;
 }
 
@@ -883,11 +885,14 @@ bool XkbKeyboardLayoutEngine::XkbLookup(xkb_keycode_t xkb_keycode,
     LOG(ERROR) << "No current XKB state";
     return false;
   }
-  xkb_state_update_mask(xkb_state_.get(), xkb_flags, 0, 0, 0, 0, 0);
-  *xkb_keysym = xkb_state_key_get_one_sym(xkb_state_.get(), xkb_keycode);
+
+  auto* state = xkb_state_.get();
+  xkb_state_update_mask(state, xkb_flags, 0, 0, 0, 0, layout_index_);
+  *xkb_keysym = xkb_state_key_get_one_sym(state, xkb_keycode);
+
   if (*xkb_keysym == XKB_KEY_NoSymbol)
     return false;
-  *character = xkb_state_key_get_utf32(xkb_state_.get(), xkb_keycode);
+  *character = xkb_state_key_get_utf32(state, xkb_keycode);
   return true;
 }
 
diff --git a/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h b/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h
index b91bf80420cc..46069ed744c6 100644
--- a/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h
+++ b/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h
@@ -46,10 +46,10 @@ class EVENTS_OZONE_LAYOUT_EXPORT XkbKeyboardLayoutEngine
               DomKey* dom_key,
               KeyboardCode* key_code) const override;
 
-  int GetModifierFlags(uint32_t depressed,
-                       uint32_t latched,
-                       uint32_t locked,
-                       uint32_t group) const;
+  int UpdateModifiers(uint32_t depressed,
+                      uint32_t latched,
+                      uint32_t locked,
+                      uint32_t group);
 
   static void ParseLayoutName(const std::string& layout_name,
                               std::string* layout_id,
@@ -122,6 +122,8 @@ class EVENTS_OZONE_LAYOUT_EXPORT XkbKeyboardLayoutEngine
 
   std::string current_layout_name_;
 
+  xkb_layout_index_t layout_index_ = 0;
+
   // Support weak pointers for attach & detach callbacks.
   base::WeakPtrFactory<XkbKeyboardLayoutEngine> weak_ptr_factory_;
 };
diff --git a/ui/ozone/platform/wayland/wayland_keyboard.cc b/ui/ozone/platform/wayland/wayland_keyboard.cc
index 770908b266e8..82677aecafe7 100644
--- a/ui/ozone/platform/wayland/wayland_keyboard.cc
+++ b/ui/ozone/platform/wayland/wayland_keyboard.cc
@@ -137,7 +137,7 @@ void WaylandKeyboard::Modifiers(void* data,
   WaylandKeyboard* keyboard = static_cast<WaylandKeyboard*>(data);
   DCHECK(keyboard);
 
-  keyboard->modifiers_ = keyboard->layout_engine_->GetModifierFlags(
+  keyboard->modifiers_ = keyboard->layout_engine_->UpdateModifiers(
       depressed, latched, locked, group);
 #endif
 }
-- 
2.17.1

