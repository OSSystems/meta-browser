Upstream-Status: Backport

* Backported from the ToT: https://crrev.com/c/1297085

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From e95b1cced0fcbb01c72abccbb09c937abeeab408 Mon Sep 17 00:00:00 2001
From: Michael Spang <spang@chromium.org>
Date: Tue, 23 Oct 2018 19:23:40 +0000
Subject: [PATCH 14/17] Whitelist dmabuf sync ioctl on all linux
 platforms

This ioctl is used to synchronize zero copy GPU uploads. Non-Chrome OS
builds are starting to be able to use this capability (wayland on linux
desktop, non-CrOS DRM platform builds) so whitelist it more broadly.

Bug: 898234, 864914
Test: chrome --enable-zero-copy --enable-native-gpu-memory-buffers
  on http://media.24ways.org/2009/15/space.html w/ fps counter

Change-Id: I449d5deddd48abff65a7f7add9c3b990f8d208e3
Reviewed-on: https://chromium-review.googlesource.com/c/1297085
Reviewed-by: Robert Sesek <rsesek@chromium.org>
Commit-Queue: Michael Spang <spang@chromium.org>
Cr-Commit-Position: refs/heads/master@{#602049}
---
 .../sandbox/linux/bpf_renderer_policy_linux.cc                | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/services/service_manager/sandbox/linux/bpf_renderer_policy_linux.cc b/services/service_manager/sandbox/linux/bpf_renderer_policy_linux.cc
index bbeb3152da5d..a5320729806c 100644
--- a/services/service_manager/sandbox/linux/bpf_renderer_policy_linux.cc
+++ b/services/service_manager/sandbox/linux/bpf_renderer_policy_linux.cc
@@ -15,7 +15,6 @@
 #include "sandbox/linux/system_headers/linux_syscalls.h"
 #include "services/service_manager/sandbox/linux/sandbox_linux.h"
 
-#if defined(OS_CHROMEOS)
 // TODO(vignatti): replace the local definitions below with #include
 // <linux/dma-buf.h> once kernel version 4.6 becomes widely used.
 #include <linux/types.h>
@@ -26,7 +25,6 @@ struct local_dma_buf_sync {
 #define LOCAL_DMA_BUF_BASE 'b'
 #define LOCAL_DMA_BUF_IOCTL_SYNC \
   _IOW(LOCAL_DMA_BUF_BASE, 0, struct local_dma_buf_sync)
-#endif
 
 using sandbox::SyscallSets;
 using sandbox::bpf_dsl::Allow;
@@ -43,10 +41,8 @@ ResultExpr RestrictIoctl() {
   return Switch(request)
       .SANDBOX_BPF_DSL_CASES((static_cast<unsigned long>(TCGETS), FIONREAD),
                              Allow())
-#if defined(OS_CHROMEOS)
       .SANDBOX_BPF_DSL_CASES(
           (static_cast<unsigned long>(LOCAL_DMA_BUF_IOCTL_SYNC)), Allow())
-#endif
       .Default(sandbox::CrashSIGSYSIoctl());
 }
 
-- 
2.17.1

