Upstream-Status: Backport

* Backported from the ToT: https://crrev.com/c/1296533

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 1a1a0b2b998e10f5f03e4bd8f0e19eedcf5f97a9 Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Tue, 23 Oct 2018 16:54:28 +0000
Subject: [PATCH 06/17] [ozone/wayland] Start using announced
 formats from ::Modifers call.

The zwp_linux_dmabuf interface says that both "modifier" and "format"
event calls announce supported fourcc formats. Thus, start using
both of them to store supported formats.

It's said that the "format" event call is going to be deprecated,
but "modifier" only works when zwp_linux_dmabuf version 3 is
supported by the compositor. As long as there are still systems with
zwp_linux_dmabuf version 1, use both "format" and "modifier"
event calls.

Also, increase supported zwp_linux_dmabuf version in
WaylandConnection.

Change-Id: Idad0c309e48370e831316f6e2353bc5cd1fd5c01
Bug: 864914
Reviewed-on: https://chromium-review.googlesource.com/c/1296533
Reviewed-by: Robert Kroeger <rjkroege@chromium.org>
Commit-Queue: Maksim Sisov <msisov@igalia.com>
Cr-Commit-Position: refs/heads/master@{#601988}
---
 .../wayland/wayland_buffer_manager.cc         | 26 ++++++++++++++-----
 .../platform/wayland/wayland_buffer_manager.h |  2 ++
 .../platform/wayland/wayland_connection.cc    |  2 +-
 3 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/ui/ozone/platform/wayland/wayland_buffer_manager.cc b/ui/ozone/platform/wayland/wayland_buffer_manager.cc
index 59f2b1282978..e322f428d512 100644
--- a/ui/ozone/platform/wayland/wayland_buffer_manager.cc
+++ b/ui/ozone/platform/wayland/wayland_buffer_manager.cc
@@ -328,6 +328,21 @@ void WaylandBufferManager::OnBufferSwapped(Buffer* buffer) {
       .Run(buffer->swap_result, std::move(buffer->feedback));
 }
 
+void WaylandBufferManager::AddSupportedFourCCFormat(uint32_t fourcc_format) {
+  // Return on not the supported fourcc format.
+  if (!IsValidBufferFormat(fourcc_format))
+    return;
+
+  // It can happen that ::Format or ::Modifiers call can have already added such
+  // a format. Thus, we can ignore that format.
+  gfx::BufferFormat format = GetBufferFormatFromFourCCFormat(fourcc_format);
+  auto it = std::find(supported_buffer_formats_.begin(),
+                      supported_buffer_formats_.end(), format);
+  if (it != supported_buffer_formats_.end())
+    return;
+  supported_buffer_formats_.push_back(format);
+}
+
 // static
 void WaylandBufferManager::Modifiers(
     void* data,
@@ -335,7 +350,9 @@ void WaylandBufferManager::Modifiers(
     uint32_t format,
     uint32_t modifier_hi,
     uint32_t modifier_lo) {
-  NOTIMPLEMENTED();
+  WaylandBufferManager* self = static_cast<WaylandBufferManager*>(data);
+  if (self)
+    self->AddSupportedFourCCFormat(format);
 }
 
 // static
@@ -343,11 +360,8 @@ void WaylandBufferManager::Format(void* data,
                                   struct zwp_linux_dmabuf_v1* zwp_linux_dmabuf,
                                   uint32_t format) {
   WaylandBufferManager* self = static_cast<WaylandBufferManager*>(data);
-  // Return on not the supported ARGB format.
-  if (format == DRM_FORMAT_ARGB2101010)
-    return;
-  self->supported_buffer_formats_.push_back(
-      GetBufferFormatFromFourCCFormat(format));
+  if (self)
+    self->AddSupportedFourCCFormat(format);
 }
 
 // static
diff --git a/ui/ozone/platform/wayland/wayland_buffer_manager.h b/ui/ozone/platform/wayland/wayland_buffer_manager.h
index f2917fd47e7a..482b98a7333c 100644
--- a/ui/ozone/platform/wayland/wayland_buffer_manager.h
+++ b/ui/ozone/platform/wayland/wayland_buffer_manager.h
@@ -151,6 +151,8 @@ class WaylandBufferManager {
 
   void OnBufferSwapped(Buffer* buffer);
 
+  void AddSupportedFourCCFormat(uint32_t fourcc_format);
+
   // zwp_linux_dmabuf_v1_listener
   static void Modifiers(void* data,
                         struct zwp_linux_dmabuf_v1* zwp_linux_dmabuf,
diff --git a/ui/ozone/platform/wayland/wayland_connection.cc b/ui/ozone/platform/wayland/wayland_connection.cc
index d4ce8fb56680..ead0cf3ef4cb 100644
--- a/ui/ozone/platform/wayland/wayland_connection.cc
+++ b/ui/ozone/platform/wayland/wayland_connection.cc
@@ -27,7 +27,7 @@ namespace ui {
 
 namespace {
 constexpr uint32_t kMaxCompositorVersion = 4;
-constexpr uint32_t kMaxLinuxDmabufVersion = 1;
+constexpr uint32_t kMaxLinuxDmabufVersion = 3;
 constexpr uint32_t kMaxSeatVersion = 4;
 constexpr uint32_t kMaxShmVersion = 1;
 constexpr uint32_t kMaxXdgShellVersion = 1;
-- 
2.17.1

