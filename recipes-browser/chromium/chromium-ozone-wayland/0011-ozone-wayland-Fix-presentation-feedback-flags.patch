Upstream-Status: Submitted [https://crrev.com/c/1571655]

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 30d5ed8585e62707f2cc38c2bef739c195cbca40 Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Thu, 18 Apr 2019 11:48:58 +0300
Subject: [PATCH 11/11] [ozone/wayland] Fix presentation feedback flags.

Wayland VSync is different from what Chromium expects.

In Chromium, VSync means that the timestamp and the interval
must be taken into the account to update scheduling of the next frames.

Also, some compositors do not provide presentation flags. Thus,
make an assumption they are HWClock and HWCompletion.

Bug: 954087
Change-Id: I7c441e3fa7d1b9c4fbc3d7835bd99302a93b3a61
---
 .../wayland/host/wayland_buffer_manager.cc       | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/ui/ozone/platform/wayland/host/wayland_buffer_manager.cc b/ui/ozone/platform/wayland/host/wayland_buffer_manager.cc
index 24ef255b06aa..db3197ceef6b 100644
--- a/ui/ozone/platform/wayland/host/wayland_buffer_manager.cc
+++ b/ui/ozone/platform/wayland/host/wayland_buffer_manager.cc
@@ -20,8 +20,9 @@ namespace {
 
 uint32_t GetPresentationKindFlags(uint32_t flags) {
   uint32_t presentation_flags = 0;
-  if (flags & WP_PRESENTATION_FEEDBACK_KIND_VSYNC)
-    presentation_flags |= gfx::PresentationFeedback::kVSync;
+  // Wayland spec has different meaning of VSync. In Chromium, VSync means to
+  // update the begin frame vsync timing based on presentation feedback.
+  presentation_flags |= gfx::PresentationFeedback::kVSync;
   if (flags & WP_PRESENTATION_FEEDBACK_KIND_HW_CLOCK)
     presentation_flags |= gfx::PresentationFeedback::kHWClock;
   if (flags & WP_PRESENTATION_FEEDBACK_KIND_HW_COMPLETION)
@@ -246,6 +247,17 @@ class WaylandBufferManager::Surface {
       auto presentation = std::move(self->presentation_feedbacks_.front());
       DCHECK(presentation.second.get() == wp_presentation_feedback);
       self->presentation_feedbacks_.pop();
+
+      // Workaround: some compositors do not provide presentation flags. Thus,
+      // manually fix it.
+      if (!flags) {
+        // The display hardware provided measurements that the hardware driver
+        // converted into a presentation timestamp.
+        flags |= WP_PRESENTATION_FEEDBACK_KIND_HW_CLOCK;
+        // The buffer has been presented on the screen.
+        flags |= WP_PRESENTATION_FEEDBACK_KIND_HW_COMPLETION;
+      }
+
       self->OnPresentation(
           presentation.first,
           gfx::PresentationFeedback(
-- 
2.17.1

