Upstream-Status: Backport

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 84b715221b309bde85a20ef2d2ee8142bac461ae Mon Sep 17 00:00:00 2001
From: Nick Diego Yamane <nickdiego@igalia.com>
Date: Tue, 5 Feb 2019 15:53:28 +0000
Subject: [PATCH 10/42] ozone/wayland: Support dead keys

This patch adds character composition capabilities to ozone
wayland text input backend. To accomplish this it modifies
WaylandInputMethodContext, reusing ui::CharacterComposer
(previously chromeos-only) to handle key events forwared
by InputMethodAuraLinux.

BUG=921947

Change-Id: I9f06ed253ad0ba67b437ef683a6ed235cb57a1f2
Reviewed-on: https://chromium-review.googlesource.com/c/1448136
Reviewed-by: Shu Chen <shuchen@chromium.org>
Reviewed-by: Robert Kroeger <rjkroege@chromium.org>
Commit-Queue: Nick Yamane <nickdiego@igalia.com>
Cr-Commit-Position: refs/heads/master@{#629160}
---
 ui/ozone/platform/wayland/DEPS                        |  1 +
 .../platform/wayland/wayland_input_method_context.cc  | 11 ++++++++++-
 .../platform/wayland/wayland_input_method_context.h   |  5 +++++
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/ui/ozone/platform/wayland/DEPS b/ui/ozone/platform/wayland/DEPS
index 1bdd1df6c101..b15ab08f1a4f 100644
--- a/ui/ozone/platform/wayland/DEPS
+++ b/ui/ozone/platform/wayland/DEPS
@@ -2,6 +2,7 @@ include_rules = [
   "+ui/base/buildflags.h",  # Doesn't bring in all of ui/base.
   "+ui/base/hit_test.h", # UI hit test doesn't bring in all of ui/base.
   "+ui/base/ui_base_features.h",
+  "+ui/base/ime/character_composer.h",
   "+ui/base/ime/composition_text.h",
   "+ui/base/ime/linux/linux_input_method_context.h",
   "+ui/base/ime/linux/linux_input_method_context_factory.h",
diff --git a/ui/ozone/platform/wayland/wayland_input_method_context.cc b/ui/ozone/platform/wayland/wayland_input_method_context.cc
index 959a8e331dba..f5e57bb3aab3 100644
--- a/ui/ozone/platform/wayland/wayland_input_method_context.cc
+++ b/ui/ozone/platform/wayland/wayland_input_method_context.cc
@@ -70,10 +70,19 @@ void WaylandInputMethodContext::Init(bool initialize_for_testing) {
 
 bool WaylandInputMethodContext::DispatchKeyEvent(
     const ui::KeyEvent& key_event) {
-  return false;
+  if (key_event.type() != ET_KEY_PRESSED ||
+      !character_composer_.FilterKeyPress(key_event))
+    return false;
+
+  // TODO(nickdiego): Handle preedit string
+  auto composed = character_composer_.composed_character();
+  if (!composed.empty())
+    delegate_->OnCommit(composed);
+  return true;
 }
 
 void WaylandInputMethodContext::Reset() {
+  character_composer_.Reset();
   if (text_input_)
     text_input_->Reset();
 }
diff --git a/ui/ozone/platform/wayland/wayland_input_method_context.h b/ui/ozone/platform/wayland/wayland_input_method_context.h
index 1023ecca5850..7fd0e9455299 100644
--- a/ui/ozone/platform/wayland/wayland_input_method_context.h
+++ b/ui/ozone/platform/wayland/wayland_input_method_context.h
@@ -6,6 +6,7 @@
 #define UI_OZONE_PLATFORM_WAYLAND_WAYLAND_INPUT_METHOD_CONTEXT_H_
 
 #include "base/macros.h"
+#include "ui/base/ime/character_composer.h"
 #include "ui/base/ime/linux/linux_input_method_context.h"
 #include "ui/events/ozone/evdev/event_dispatch_callback.h"
 #include "ui/ozone/platform/wayland/zwp_text_input_wrapper.h"
@@ -51,6 +52,10 @@ class WaylandInputMethodContext : public LinuxInputMethodContext,
 
   std::unique_ptr<ZWPTextInputWrapper> text_input_;
 
+  // An object to compose a character from a sequence of key presses
+  // including dead key etc.
+  CharacterComposer character_composer_;
+
   DISALLOW_COPY_AND_ASSIGN(WaylandInputMethodContext);
 };
 
-- 
2.17.1

