Upstream-Status: Backport

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 27d114c48e4daa9b0870116b449941e463724591 Mon Sep 17 00:00:00 2001
From: Nick Diego Yamane <nickdiego@igalia.com>
Date: Wed, 13 Feb 2019 09:00:06 +0000
Subject: [PATCH 18/42] ozone/wayland: Reuse tooltip subsurfaces

This patch modifies WaylandWindow so that it reuses
tooltip subsurfaces instead of recreating/destroying them
every time show/hide functions are called.
This change aims to boost performance of tooltips creation
since we avoid recreating subsurfaces so frequently.
Additionally, this avoids crashing compositors such as Sway
[1], which is getting pretty popular and is known to have
buggy implementation of subsurfaces handling [2]. For example,
some sway crashes have been observed after focus -> unfocus ->
focus again buttons with tooltips for example. This kind of issue
haven't been observed anymore after this change.

[1] https://swaywm.org
[2] https://github.com/swaywm/sway/issues/3195

Bug: 578890
Change-Id: Ic27fb491c446f30f3d60633f4216b56799463896
Reviewed-on: https://chromium-review.googlesource.com/c/1466063
Commit-Queue: Nick Diego Yamane <nickdiego@igalia.com>
Reviewed-by: Maksim Sisov <msisov@igalia.com>
Cr-Commit-Position: refs/heads/master@{#631605}
---
 ui/ozone/platform/wayland/wayland_window.cc | 28 +++++++++++----------
 ui/ozone/platform/wayland/wayland_window.h  |  5 ++--
 2 files changed, 18 insertions(+), 15 deletions(-)

diff --git a/ui/ozone/platform/wayland/wayland_window.cc b/ui/ozone/platform/wayland/wayland_window.cc
index 32bf9bfea091..1e6b4648b8ff 100644
--- a/ui/ozone/platform/wayland/wayland_window.cc
+++ b/ui/ozone/platform/wayland/wayland_window.cc
@@ -189,7 +189,7 @@ void WaylandWindow::CreateXdgSurface() {
   }
 }
 
-void WaylandWindow::CreateTooltipSubSurface() {
+void WaylandWindow::CreateAndShowTooltipSubSurface() {
   // Since Aura does not not provide a reference parent window, needed by
   // Wayland, we get the current focused window to place and show the tooltips.
   parent_window_ = connection_->GetCurrentFocusedWindow();
@@ -203,11 +203,14 @@ void WaylandWindow::CreateTooltipSubSurface() {
     return;
   }
 
-  wl_subcompositor* subcompositor = connection_->subcompositor();
-  DCHECK(subcompositor);
-  tooltip_subsurface_.reset(wl_subcompositor_get_subsurface(
-      subcompositor, surface_.get(), parent_window_->surface()));
+  if (!tooltip_subsurface_) {
+    wl_subcompositor* subcompositor = connection_->subcompositor();
+    DCHECK(subcompositor);
+    tooltip_subsurface_.reset(wl_subcompositor_get_subsurface(
+        subcompositor, surface_.get(), parent_window_->surface()));
+  }
 
+  DCHECK(tooltip_subsurface_);
   wl_subsurface_set_position(tooltip_subsurface_.get(), bounds_.x(),
                              bounds_.y());
   wl_subsurface_set_desync(tooltip_subsurface_.get());
@@ -256,11 +259,12 @@ void WaylandWindow::Show() {
 
   if (xdg_surface_)
     return;
+
   if (is_tooltip_) {
-    if (!tooltip_subsurface_)
-      CreateTooltipSubSurface();
+    CreateAndShowTooltipSubSurface();
     return;
   }
+
   if (!xdg_popup_) {
     CreateXdgPopup();
     connection_->ScheduleFlush();
@@ -272,14 +276,12 @@ void WaylandWindow::Hide() {
     parent_window_ = nullptr;
     wl_surface_attach(surface_.get(), NULL, 0, 0);
     wl_surface_commit(surface_.get());
-    // Tooltip subsurface must be reset only after the buffer is detached.
-    // Otherwise, gnome shell, for example, can end up with a broken event
-    // pipe.
-    tooltip_subsurface_.reset();
     return;
   }
+
   if (child_window_)
     child_window_->Hide();
+
   if (xdg_popup_) {
     parent_window_->set_child_window(nullptr);
     xdg_popup_.reset();
@@ -671,8 +673,8 @@ void WaylandWindow::AddEnteredOutputId(struct wl_output* output) {
   const uint32_t entered_output_id =
       connection_->wayland_output_manager()->GetIdForOutput(output);
   DCHECK_NE(entered_output_id, 0u);
-  auto entered_output_id_it = entered_outputs_ids_.insert(entered_output_id);
-  DCHECK(entered_output_id_it.second);
+  auto result = entered_outputs_ids_.insert(entered_output_id);
+  DCHECK(result.first != entered_outputs_ids_.end());
 }
 
 void WaylandWindow::RemoveEnteredOutputId(struct wl_output* output) {
diff --git a/ui/ozone/platform/wayland/wayland_window.h b/ui/ozone/platform/wayland/wayland_window.h
index dc5fa34a766e..1b6a5bd910f2 100644
--- a/ui/ozone/platform/wayland/wayland_window.h
+++ b/ui/ozone/platform/wayland/wayland_window.h
@@ -156,8 +156,9 @@ class WaylandWindow : public PlatformWindow,
   void CreateXdgPopup();
   // Creates a surface window, which is visible as a main window.
   void CreateXdgSurface();
-  // Creates a subsurface window, to host tooltip's content.
-  void CreateTooltipSubSurface();
+  // Creates (if necessary) and show subsurface window, to host
+  // tooltip's content.
+  void CreateAndShowTooltipSubSurface();
 
   // Gets a parent window for this window.
   WaylandWindow* GetParentWindow(gfx::AcceleratedWidget parent_widget);
-- 
2.17.1

