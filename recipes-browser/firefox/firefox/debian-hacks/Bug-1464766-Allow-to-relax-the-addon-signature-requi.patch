From: Mike Hommey <mh+mozilla@glandium.org>
Date: Mon, 28 May 2018 16:15:13 +0900
Subject: Bug 1464766 - Allow to relax the addon signature requirements.
 r?aswan

Add a build option that allows to relax the requirements in
SCOPE_APPLICATION and SCOPE_SYSTEM, individually or together, in an
opt-in manner.
---
 toolkit/modules/AppConstants.jsm                | 12 ++++++++++++
 toolkit/modules/moz.build                       |  2 ++
 toolkit/moz.configure                           | 17 +++++++++++++++++
 .../mozapps/extensions/internal/XPIInstall.jsm  |  3 +++
 4 files changed, 34 insertions(+)

diff --git a/toolkit/modules/AppConstants.jsm b/toolkit/modules/AppConstants.jsm
index e1b27e0159ab..8f0440df295b 100644
--- a/toolkit/modules/AppConstants.jsm
+++ b/toolkit/modules/AppConstants.jsm
@@ -8,6 +8,7 @@
 
 ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");
 ChromeUtils.defineModuleGetter(this, "Services", "resource://gre/modules/Services.jsm");
+ChromeUtils.defineModuleGetter(this, "AddonManager", "resource://gre/modules/AddonManager.jsm");
 
 this.EXPORTED_SYMBOLS = ["AppConstants"];
 
@@ -236,6 +237,17 @@ this.AppConstants = Object.freeze({
   false,
 #endif
 
+  get MOZ_UNSIGNED_SCOPES() {
+    let result = 0;
+#ifdef MOZ_UNSIGNED_APP_SCOPE
+    result |= AddonManager.SCOPE_APPLICATION;
+#endif
+#ifdef MOZ_UNSIGNED_SYSTEM_SCOPE
+    result |= AddonManager.SCOPE_SYSTEM;
+#endif
+    return result;
+  },
+
   MOZ_ALLOW_LEGACY_EXTENSIONS:
 #ifdef MOZ_ALLOW_LEGACY_EXTENSIONS
   true,
diff --git a/toolkit/modules/moz.build b/toolkit/modules/moz.build
index e2f7436721d7..bc4756b6b7e6 100644
--- a/toolkit/modules/moz.build
+++ b/toolkit/modules/moz.build
@@ -308,6 +308,8 @@ for var in ('ANDROID_PACKAGE_NAME',
 
 for var in ('MOZ_TOOLKIT_SEARCH',
             'MOZ_SYSTEM_NSS',
+            'MOZ_UNSIGNED_APP_SCOPE',
+            'MOZ_UNSIGNED_SYSTEM_SCOPE',
             'MOZ_UPDATER',
             'MOZ_ANDROID_MOZILLA_ONLINE',
             'MOZ_SWITCHBOARD'):
diff --git a/toolkit/moz.configure b/toolkit/moz.configure
index 4134ba2d042a..d068417f7ef9 100644
--- a/toolkit/moz.configure
+++ b/toolkit/moz.configure
@@ -1216,3 +1216,20 @@ def proxy_bypass_protection(_):
 
 set_config('MOZ_PROXY_BYPASS_PROTECTION', proxy_bypass_protection)
 set_define('MOZ_PROXY_BYPASS_PROTECTION', proxy_bypass_protection)
+
+# Addon signing
+# ==============================================================
+
+option('--with-unsigned-addon-scopes',
+       nargs='+', choices=('app', 'system'),
+       help='Addon scopes where signature is not required')
+
+@depends('--with-unsigned-addon-scopes')
+def unsigned_addon_scopes(scopes):
+    return namespace(
+        app='app' in scopes or None,
+        system='system' in scopes or None,
+    )
+
+set_config('MOZ_UNSIGNED_APP_SCOPE', unsigned_addon_scopes.app)
+set_config('MOZ_UNSIGNED_SYSTEM_SCOPE', unsigned_addon_scopes.system)
diff --git a/toolkit/mozapps/extensions/internal/XPIInstall.jsm b/toolkit/mozapps/extensions/internal/XPIInstall.jsm
index 2fc1d7edbe80..cc326f79c347 100644
--- a/toolkit/mozapps/extensions/internal/XPIInstall.jsm
+++ b/toolkit/mozapps/extensions/internal/XPIInstall.jsm
@@ -1037,6 +1037,9 @@ function shouldVerifySignedState(aAddon) {
   if (aAddon._installLocation.name == KEY_APP_SYSTEM_DEFAULTS)
     return false;
 
+  if (aAddon._installLocation.scope & AppConstants.MOZ_UNSIGNED_SCOPES)
+    return false;
+
   // Otherwise only check signatures if signing is enabled and the add-on is one
   // of the signed types.
   return AddonSettings.ADDON_SIGNING && SIGNED_TYPES.has(aAddon.type);
