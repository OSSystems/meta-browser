From f618652f21e944f60870b67d47484634fb2b9c94 Mon Sep 17 00:00:00 2001
From: Takuro Ashie <ashie@homa.ne.jp>
Date: Tue, 20 Feb 2018 17:17:11 +0900
Subject: [PATCH 3/4] Use wl_egl_window as a native EGL window on Wayland

Signed-off-by: Takuro Ashie <ashie@clear-code.com>
---
 config/system-headers.mozbuild   |  6 ++++++
 gfx/gl/GLContextProviderEGL.cpp  |  6 ++----
 toolkit/library/moz.build        |  6 ++++++
 widget/gtk/mozcontainer.cpp      | 40 ++++++++++++++++++++++++++++++++++++++++
 widget/gtk/mozcontainer.h        |  3 +++
 widget/gtk/mozgtk/gtk3/moz.build |  7 +++++++
 widget/gtk/nsWindow.cpp          | 23 +++++++++++++++++++++++
 widget/nsIWidget.h               |  1 +
 8 files changed, 88 insertions(+), 4 deletions(-)

diff --git a/config/system-headers.mozbuild b/config/system-headers.mozbuild
index 0872969ae159..a027458f2792 100644
--- a/config/system-headers.mozbuild
+++ b/config/system-headers.mozbuild
@@ -1344,3 +1344,9 @@ if CONFIG['MOZ_SYSTEM_ICU']:
         'unicode/ustring.h',
         'unicode/utypes.h',
     ]
+
+if CONFIG['MOZ_WAYLAND']:
+    system_headers += [
+        'wayland-client.h',
+        'wayland-egl.h',
+    ]
diff --git a/gfx/gl/GLContextProviderEGL.cpp b/gfx/gl/GLContextProviderEGL.cpp
index d3dffdc9e6ab..c55329396e4e 100644
--- a/gfx/gl/GLContextProviderEGL.cpp
+++ b/gfx/gl/GLContextProviderEGL.cpp
@@ -4,10 +4,8 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #if defined(MOZ_WIDGET_GTK)
-    #include <gdk/gdkx.h>
-    // we're using default display for now
-    #define GET_NATIVE_WINDOW_FROM_REAL_WIDGET(aWidget) ((EGLNativeWindowType)GDK_WINDOW_XID((GdkWindow*)aWidget->GetNativeData(NS_NATIVE_WINDOW)))
-    #define GET_NATIVE_WINDOW_FROM_COMPOSITOR_WIDGET(aWidget) ((EGLNativeWindowType)GDK_WINDOW_XID((GdkWindow*)aWidget->RealWidget()->GetNativeData(NS_NATIVE_WINDOW)))
+    #define GET_NATIVE_WINDOW_FROM_REAL_WIDGET(aWidget) ((EGLNativeWindowType)aWidget->GetNativeData(NS_NATIVE_EGL_WINDOW))
+    #define GET_NATIVE_WINDOW_FROM_COMPOSITOR_WIDGET(aWidget) ((EGLNativeWindowType)aWidget->RealWidget()->GetNativeData(NS_NATIVE_EGL_WINDOW))
 #elif defined(MOZ_WIDGET_ANDROID)
     #define GET_NATIVE_WINDOW_FROM_REAL_WIDGET(aWidget) ((EGLNativeWindowType)aWidget->GetNativeData(NS_JAVA_SURFACE))
     #define GET_NATIVE_WINDOW_FROM_COMPOSITOR_WIDGET(aWidget) (aWidget->AsAndroid()->GetEGLNativeWindow())
diff --git a/toolkit/library/moz.build b/toolkit/library/moz.build
index b0df6b98b91f..df36ec3f3cf1 100644
--- a/toolkit/library/moz.build
+++ b/toolkit/library/moz.build
@@ -209,6 +209,12 @@ if CONFIG['OS_ARCH'] == 'WINNT':
         'winspool',
     ]
 
+if CONFIG['MOZ_WAYLAND']:
+    OS_LIBS += [
+        'wayland-client',
+        'wayland-egl',
+    ]
+
 if CONFIG['OS_ARCH'] == 'Linux' and CONFIG['OS_TARGET'] != 'Android':
     OS_LIBS += [
         'rt',
diff --git a/widget/gtk/mozcontainer.cpp b/widget/gtk/mozcontainer.cpp
index fe61989ff65b..0c497354100a 100644
--- a/widget/gtk/mozcontainer.cpp
+++ b/widget/gtk/mozcontainer.cpp
@@ -10,6 +10,7 @@
 #ifdef MOZ_WAYLAND
 #include <gdk/gdkx.h>
 #include <gdk/gdkwayland.h>
+#include <wayland-egl.h>
 #endif
 #include <stdio.h>
 #include <dlfcn.h>
@@ -207,6 +208,11 @@ moz_container_init (MozContainer *container)
 
 #if defined(MOZ_WAYLAND)
     {
+      container->subcompositor = nullptr;
+      container->surface = nullptr;
+      container->subsurface = nullptr;
+      container->eglwindow = nullptr;
+
       GdkDisplay *gdk_display = gtk_widget_get_display(GTK_WIDGET(container));
       if (GDK_IS_WAYLAND_DISPLAY (gdk_display)) {
           // Available as of GTK 3.8+
@@ -289,6 +295,7 @@ moz_container_map_surface(MozContainer *container)
 static void
 moz_container_unmap_surface(MozContainer *container)
 {
+    g_clear_pointer(&container->eglwindow, wl_egl_window_destroy);
     g_clear_pointer(&container->subsurface, wl_subsurface_destroy);
     g_clear_pointer(&container->surface, wl_surface_destroy);
 }
@@ -434,6 +441,11 @@ moz_container_size_allocate (GtkWidget     *widget,
         gdk_window_get_position(gtk_widget_get_window(widget), &x, &y);
         wl_subsurface_set_position(container->subsurface, x, y);
     }
+    if (container->eglwindow) {
+        wl_egl_window_resize(container->eglwindow,
+                             allocation->width, allocation->height,
+                             0, 0);
+    }
 #endif
 }
 
@@ -559,4 +571,32 @@ moz_container_get_wl_surface(MozContainer *container)
 
     return container->surface;
 }
+
+struct wl_egl_window *
+moz_container_get_wl_egl_window(MozContainer *container)
+{
+    if (container->eglwindow)
+        return container->eglwindow;
+
+    GdkWindow *window = gtk_widget_get_window(GTK_WIDGET(container));
+    if (!gdk_window_is_visible(window))
+        moz_container_map_surface(container);
+
+    struct wl_surface *wlsurf = moz_container_get_wl_surface(container);
+    if (!wlsurf)
+        return nullptr;
+
+    container->eglwindow
+        = wl_egl_window_create(wlsurf,
+                               gdk_window_get_width(window),
+                               gdk_window_get_height(window));
+
+    return container->eglwindow;
+}
+
+gboolean
+moz_container_has_wl_egl_window(MozContainer *container)
+{
+    return container->eglwindow ? TRUE : FALSE;
+}
 #endif
diff --git a/widget/gtk/mozcontainer.h b/widget/gtk/mozcontainer.h
index c22a96032971..a16e325173d7 100644
--- a/widget/gtk/mozcontainer.h
+++ b/widget/gtk/mozcontainer.h
@@ -72,6 +72,7 @@ struct _MozContainer
     struct wl_subcompositor *subcompositor;
     struct wl_surface       *surface;
     struct wl_subsurface    *subsurface;
+    struct wl_egl_window    *eglwindow;
 #endif
 };
 
@@ -95,6 +96,8 @@ void       moz_container_move          (MozContainer *container,
 
 #ifdef MOZ_WAYLAND
 struct wl_surface* moz_container_get_wl_surface(MozContainer *container);
+struct wl_egl_window* moz_container_get_wl_egl_window(MozContainer *container);
+gboolean moz_container_has_wl_egl_window(MozContainer *container);
 #endif
 
 #endif /* __MOZ_CONTAINER_H__ */
diff --git a/widget/gtk/mozgtk/gtk3/moz.build b/widget/gtk/mozgtk/gtk3/moz.build
index 4e9379565dd6..c1662adb992c 100644
--- a/widget/gtk/mozgtk/gtk3/moz.build
+++ b/widget/gtk/mozgtk/gtk3/moz.build
@@ -35,4 +35,11 @@ OS_LIBS += [
     'gtk-3',
     'gdk-3',
 ]
+
+if CONFIG['MOZ_WAYLAND']:
+     OS_LIBS += [
+         'wayland-client',
+         'wayland-egl',
+     ]
+
 OS_LIBS += as_needed
diff --git a/widget/gtk/nsWindow.cpp b/widget/gtk/nsWindow.cpp
index 08e6db95586f..e17abbcb8b86 100644
--- a/widget/gtk/nsWindow.cpp
+++ b/widget/gtk/nsWindow.cpp
@@ -1738,6 +1738,19 @@ nsWindow::GetNativeData(uint32_t aDataType)
     case NS_NATIVE_COMPOSITOR_DISPLAY:
         return gfxPlatformGtk::GetPlatform()->GetCompositorDisplay();
 #endif // MOZ_X11
+    case NS_NATIVE_EGL_WINDOW: {
+#ifdef MOZ_X11
+        if (mIsX11Display)
+            return mGdkWindow ? (void*)GDK_WINDOW_XID(mGdkWindow) : nullptr;
+#endif
+
+#ifdef MOZ_WAYLAND
+        if (mContainer)
+            return moz_container_get_wl_egl_window(mContainer);
+#endif
+
+        return nullptr;
+    }
     default:
         NS_WARNING("nsWindow::GetNativeData called with bad value");
         return nullptr;
@@ -4266,6 +4279,16 @@ nsWindow::NativeShow(bool aAction)
         }
     }
     else {
+#ifdef MOZ_WAYLAND
+        if (mContainer && moz_container_has_wl_egl_window(mContainer)) {
+            // Because wl_egl_window is destroyed on moz_container_unmap(),
+            // the current compositor cannot use it anymore. To avoid crash,
+            // destroy the compositor & recreate a new compositor on next
+            // expose event.
+            DestroyLayerManager();
+        }
+#endif
+
         if (mIsTopLevel) {
             // Workaround window freezes on GTK versions before 3.21.2 by
             // ensuring that configure events get dispatched to windows before
diff --git a/widget/nsIWidget.h b/widget/nsIWidget.h
index 7f8cfa5ed31c..af57eae9b199 100644
--- a/widget/nsIWidget.h
+++ b/widget/nsIWidget.h
@@ -143,6 +143,7 @@ typedef void* nsNativeWidget;
 #ifdef MOZ_X11
 #define NS_NATIVE_COMPOSITOR_DISPLAY   105
 #endif // MOZ_X11
+#define NS_NATIVE_EGL_WINDOW           106
 #endif
 #ifdef MOZ_WIDGET_ANDROID
 #define NS_JAVA_SURFACE                100
-- 
2.14.1

