Upstream-Status: Inappropriate
--- ./.cargo/config.in	2023-10-17 18:53:06.226955914 +0200
+++ ./.cargo/config.in	2023-10-17 19:01:16.674613434 +0200
@@ -125,4 +125,4 @@
 # cargo will ignore it when it's here verbatim.
 #filter substitution
 [source."@REPLACE_NAME@"]
-directory = "@top_srcdir@/@VENDORED_DIRECTORY@"
+directory = "../../cargo_home/bitbake"
--- ./gfx/wgpu_bindings/Cargo.toml.orig	2023-12-19 16:12:09.745686495 +0100
+++ ./gfx/wgpu_bindings/Cargo.toml	2023-12-19 16:14:00.983568703 +0100
@@ -16,8 +16,7 @@
 
 [dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "f71a1bc736fde37509262ca03e91d8f56a13aeb5"
+path = "../../../wgpu/wgpu-core"
 #Note: "replay" shouldn't ideally be needed,
 # but it allows us to serialize everything across IPC.
 features = ["replay", "trace", "serial-pass", "strict_asserts", "wgsl"]
@@ -26,33 +25,28 @@
 # (We should consider also enabling "vulkan" for Vulkan Portability.)
 [target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "f71a1bc736fde37509262ca03e91d8f56a13aeb5"
+path = "../../../wgpu/wgpu-core"
 features = ["metal"]
 
 # We want the wgpu-core Direct3D backends on Windows.
 [target.'cfg(windows)'.dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "f71a1bc736fde37509262ca03e91d8f56a13aeb5"
+path = "../../../wgpu/wgpu-core"
 features = ["dx11", "dx12"]
 
 # We want the wgpu-core Vulkan backend on Linux and Windows.
 [target.'cfg(any(windows, all(unix, not(any(target_os = "macos", target_os = "ios")))))'.dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "f71a1bc736fde37509262ca03e91d8f56a13aeb5"
+path = "../../../wgpu/wgpu-core"
 features = ["vulkan"]
 
 [dependencies.wgt]
 package = "wgpu-types"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "f71a1bc736fde37509262ca03e91d8f56a13aeb5"
+path = "../../../wgpu/wgpu-types"
 
 [dependencies.wgh]
 package = "wgpu-hal"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "f71a1bc736fde37509262ca03e91d8f56a13aeb5"
+path = "../../../wgpu/wgpu-hal"
 
 [dependencies]
 bincode = "1"
--- ./Cargo.toml	2024-02-12 21:53:02.000000000 +0100
+++ ./Cargo.toml	2024-03-14 13:33:31.890247372 +0100
@@ -159,32 +159,75 @@
 cssparser-macros = { path = "third_party/rust/cssparser-macros" }
 
 # Other overrides
-chardetng = { git = "https://github.com/hsivonen/chardetng", rev="3484d3e3ebdc8931493aa5df4d7ee9360a90e76b" }
-chardetng_c = { git = "https://github.com/hsivonen/chardetng_c", rev="ed8a4c6f900a90d4dbc1d64b856e61490a1c3570" }
-coremidi = { git = "https://github.com/chris-zen/coremidi.git", rev="fc68464b5445caf111e41f643a2e69ccce0b4f83" }
+chardetng = { path = "../chardetng" }
+chardetng_c = { path = "../chardetng_c" }
+coremidi = { path = "../coremidi" }
 firefox-on-glean = { path = "toolkit/components/glean/api" }
 libudev-sys = { path = "dom/webauthn/libudev-sys" }
-packed_simd = { git = "https://github.com/hsivonen/packed_simd", rev = "e588ceb568878e1a3156ea9ce551d5b63ef0cdc4" }
-midir = { git = "https://github.com/mozilla/midir.git", rev = "519e651241e867af3391db08f9ae6400bc023e18" }
+packed_simd = { path = "../packed_simd", version = "0.3.9" }
+midir = { path = "../midir" }
 # warp 0.3.3 + https://github.com/seanmonstar/warp/pull/1007
-warp = { git = "https://github.com/glandium/warp", rev = "4af45fae95bc98b0eba1ef0db17e1dac471bb23d" }
+warp = { path = "../warp" }
 
 # application-services overrides to make updating them all simpler.
-interrupt-support = { git = "https://github.com/mozilla/application-services", rev = "86c84c217036c12283d19368867323a66bf35883" }
-sql-support = { git = "https://github.com/mozilla/application-services", rev = "86c84c217036c12283d19368867323a66bf35883" }
-sync15 = { git = "https://github.com/mozilla/application-services", rev = "86c84c217036c12283d19368867323a66bf35883" }
-tabs = { git = "https://github.com/mozilla/application-services", rev = "86c84c217036c12283d19368867323a66bf35883" }
-viaduct = { git = "https://github.com/mozilla/application-services", rev = "86c84c217036c12283d19368867323a66bf35883" }
-webext-storage = { git = "https://github.com/mozilla/application-services", rev = "86c84c217036c12283d19368867323a66bf35883" }
+interrupt-support = { path = "../application-services/components/support/interrupt", version = "0.1.0" }
+sql-support = { path = "../application-services/components/support/sql", version = "0.1.0" }
+sync15 = { path = "../application-services/components/sync15", version = "0.1.0" }
+tabs = { path = "../application-services/components/tabs", version = "0.1.0" }
+viaduct = { path = "../application-services/components/viaduct", version = "0.1.0" }
+webext-storage = { path = "../application-services/components/webext-storage", version = "0.1.0" }
 
 # Patch mio 0.6 to use winapi 0.3 and miow 0.3, getting rid of winapi 0.2.
 # There is not going to be new version of mio 0.6, mio now being >= 0.7.11.
 [patch.crates-io.mio]
 path = "third_party/rust/mio-0.6.23"
 
+[patch."https://github.com/mozilla-spidermonkey/jsparagus"]
+jsparagus = { path = "../jsparagus" }
+
+[patch."https://github.com/mozilla/neqo"]
+neqo-http3 = { path = "../neqo/neqo-http3", version = "0.6.4" }
+neqo-common = { path = "../neqo/neqo-common", version = "0.6.4" }
+neqo-transport = { path = "../neqo/neqo-transport", version = "0.6.4" }
+neqo-qpack = { path = "../neqo/neqo-qpack", version = "0.6.4" }
+neqo-crypto = { path = "../neqo/neqo-crypto", version = "0.6.4" }
+
+[patch."https://github.com/FirefoxGraphics/aa-stroke"]
+aa-stroke = { path = "../aa-stroke"}
+
+[patch."https://github.com/mozilla/audioipc"]
+audioipc2-client = { path = "../audioipc/client" }
+audioipc2-server = { path = "../audioipc/server" }
+
+[patch."https://github.com/mozilla/cubeb-coreaudio-rs"]
+cubeb-coreaudio = { path = "../cubeb-coreaudio" }
+
+[patch."https://github.com/mozilla/cubeb-pulse-rs"]
+cubeb-pulse = { path = "../cubeb-pulse" }
+
+[patch."https://github.com/jfkthame/mapped_hyph.git"]
+mapped_hyph = { path = "../mapped_hyph" }
+
 [patch."https://github.com/mozilla/uniffi-rs.git"]
-uniffi = "=0.23.0"
-uniffi_bindgen = "=0.23.0"
-uniffi_build = "=0.23.0"
-uniffi_macros = "=0.23.0"
-weedle2 = "=4.0.0"
+uniffi-example-arithmetic = { path = "../uniffi-rs/examples/arithmetic" }
+uniffi-example-geometry = { path = "../uniffi-rs/examples/geometry" }
+uniffi-example-rondpoint = { path = "../uniffi-rs/examples/rondpoint" }
+uniffi-example-sprites = { path = "../uniffi-rs/examples/sprites" }
+uniffi-example-todolist = { path = "../uniffi-rs/examples/todolist" }
+
+[patch."https://github.com/FirefoxGraphics/wpf-gpu-raster"]
+wpf-gpu-raster = { path = "../wpf-gpu-raster" }
+
+[patch."https://github.com/gfx-rs/wgpu"]
+wgpu-core = { path = "../wgpu/wgpu-core" }
+wgpu-types = { path = "../wgpu/wgpu-types" }
+wgpu-hal = { path = "../wgpu/wgpu-hal" }
+
+[patch."https://github.com/mozilla/mp4parse-rust"]
+mp4parse_capi = { path = "../mp4parse/mp4parse_capi", version = "0.17.0" }
+
+[patch."https://github.com/gfx-rs/naga"]
+naga = { path = "../naga" }
+
+[patch."https://github.com/gfx-rs/d3d12-rs"]
+d3d12 = { path = "../d3d12-rs" }
