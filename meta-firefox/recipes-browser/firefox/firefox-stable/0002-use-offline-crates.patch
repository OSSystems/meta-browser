From dd1f4ef0b01724b28860ffb39ae14b2b6bdad4d7 Mon Sep 17 00:00:00 2001
From: skandigraun <skandigraun@gmail.com>
Date: Tue, 30 May 2023 22:17:51 +0200
Subject: [PATCH] update firefox

Upstream-status: Inappropriate
---
 .cargo/config.in                    |  2 +-
 Cargo.toml                          | 92 +++++++++++++++++++++--------
 third_party/rust/suggest/Cargo.toml |  8 +--
 3 files changed, 69 insertions(+), 33 deletions(-)

--- ./.cargo/config.toml.in	2024-04-15 20:25:39.821878117 +0200
+++ ./.cargo/config.toml.in	2024-04-15 20:26:12.719778977 +0200
@@ -123,7 +123,7 @@
 # cargo would fail.
 #ifndef REPLACE_NAME
 [source.vendored-sources]
-directory = "third_party/rust"
+directory = "../../cargo_home/bitbake"
 #endif
 
 # Thankfully, @REPLACE_NAME@ is unlikely to be a legitimate source, so
--- ./Cargo.toml	2024-05-13 17:32:59.890170868 +0200
+++ ./Cargo.toml	2024-05-13 17:41:06.402784911 +0200
@@ -195,38 +195,70 @@
 rure = { path = "third_party/rust/rure" }
 
 # To-be-published changes.
-cssparser = { git = "https://github.com/servo/rust-cssparser", rev = "aaa966d9d6ae70c4b8a62bb5e3a14c068bb7dff0" }
-cssparser-macros = { git = "https://github.com/servo/rust-cssparser", rev = "aaa966d9d6ae70c4b8a62bb5e3a14c068bb7dff0" }
-unicode-bidi = { git = "https://github.com/servo/unicode-bidi", rev = "ca612daf1c08c53abe07327cb3e6ef6e0a760f0c" }
+cssparser = { path = "../cssparser" }
+cssparser-macros = { path = "../cssparser/macros" }
+unicode-bidi = { path = "../unicode-bidi" }
 
 # Other overrides
-chardetng = { git = "https://github.com/hsivonen/chardetng", rev = "3484d3e3ebdc8931493aa5df4d7ee9360a90e76b" }
-chardetng_c = { git = "https://github.com/hsivonen/chardetng_c", rev = "ed8a4c6f900a90d4dbc1d64b856e61490a1c3570" }
-coremidi = { git = "https://github.com/chris-zen/coremidi.git", rev = "fc68464b5445caf111e41f643a2e69ccce0b4f83" }
-cose = { git = "https://github.com/franziskuskiefer/cose-rust", rev = "43c22248d136c8b38fe42ea709d08da6355cf04b" }
+chardetng = { path = "../chardetng" }
+chardetng_c = { path = "../chardetng_c" }
+coremidi = { path = "../coremidi" }
+cose = { path = "../cose-rust" }
 firefox-on-glean = { path = "toolkit/components/glean/api" }
 icu_capi = { path = "intl/icu_capi" }
 icu_segmenter_data = { path = "intl/icu_segmenter_data" }
 libudev-sys = { path = "dom/webauthn/libudev-sys" }
-midir = { git = "https://github.com/mozilla/midir.git", rev = "85156e360a37d851734118104619f86bd18e94c6" }
+midir = { path = "../midir" }
 # warp 0.3.6 + https://github.com/seanmonstar/warp/pull/1069
-warp = { git = "https://github.com/seanmonstar/warp", rev = "9d081461ae1167eb321585ce424f4fef6cf0092b" }
+warp = { path = "../warp" }
 # Allow webrender to have a versioned dependency on the older crate on crates.io
 # in order to build standalone.
 malloc_size_of_derive = { path = "xpcom/rust/malloc_size_of_derive" }
 
 # application-services overrides to make updating them all simpler.
-interrupt-support = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-relevancy = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-sql-support = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-suggest = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-sync15 = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-tabs = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-viaduct = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
-webext-storage = { git = "https://github.com/mozilla/application-services", rev = "e6ccfed09ebe663f464a33968f42e656c152e584" }
+interrupt-support = { path = "../application-services/components/support/interrupt", version = "0.1.0" }
+relevancy = { path = "../application-services/components/relevancy", version = "0.1.0"}
+sql-support = { path = "../application-services/components/support/sql", version = "0.1.0" }
+suggest = { path = "../application-services/components/suggest", version = "0.1.0" }
+sync15 = { path = "../application-services/components/sync15", version = "0.1.0" }
+tabs = { path = "../application-services/components/tabs", version = "0.1.0" }
+error-support = { path = "../application-services/components/support/error", version = "0.1.0" }
+viaduct = { path = "../application-services/components/viaduct", version = "0.1.0" }
+webext-storage = { path = "../application-services/components/webext-storage", version = "0.1.0" }
 
 # Patch mio 0.8.8 to use windows-sys 0.52 (backport https://github.com/tokio-rs/mio/commit/eea9e3e0c469480e5c59c01e6c3c7e5fd88f0848)
-mio_0_8 = { package = "mio", git = "https://github.com/glandium/mio", rev = "9a2ef335c366044ffe73b1c4acabe50a1daefe05" }
+mio_0_8 = { path = "../mio", package = "mio" }
+
+metal = { path = "../metal" }
+
+[patch."https://github.com/mozilla-spidermonkey/jsparagus"]
+jsparagus = { path = "../jsparagus" }
+
+[patch."https://github.com/mozilla/neqo"]
+neqo-http3 = { path = "../neqo/neqo-http3", version = "0.7.0" }
+neqo-common = { path = "../neqo/neqo-common", version = "0.7.0" }
+neqo-transport = { path = "../neqo/neqo-transport", version = "0.7.0" }
+neqo-qpack = { path = "../neqo/neqo-qpack", version = "0.7.0" }
+neqo-crypto = { path = "../neqo/neqo-crypto", version = "0.7.0" }
+
+[patch."https://github.com/FirefoxGraphics/aa-stroke"]
+aa-stroke = { path = "../aa-stroke"}
+
+[patch."https://github.com/mozilla/audioipc"]
+audioipc2-client = { path = "../audioipc/client" }
+audioipc2-server = { path = "../audioipc/server" }
+
+[patch."https://github.com/mozilla/cubeb-coreaudio-rs"]
+cubeb-coreaudio = { path = "../cubeb-coreaudio" }
+
+[patch."https://github.com/mozilla/cubeb-pulse-rs"]
+cubeb-pulse = { path = "../cubeb-pulse" }
+
+[patch."https://github.com/jfkthame/mapped_hyph.git"]
+mapped_hyph = { path = "../mapped_hyph" }
+
+[patch."https://github.com/mozilla/mp4parse-rust"]
+mp4parse_capi = { path = "../mp4parse/mp4parse_capi", version = "0.17.0" }
 
 # Patch mio 0.6 to use winapi 0.3 and miow 0.3, getting rid of winapi 0.2.
 # There is not going to be new version of mio 0.6, mio now being >= 0.7.11.
@@ -234,8 +266,21 @@
 path = "third_party/rust/mio-0.6.23"
 
 [patch."https://github.com/mozilla/uniffi-rs.git"]
-uniffi = "0.27.1"
-uniffi_bindgen = "0.27.1"
-uniffi_build = "0.27.1"
-uniffi_macros = "0.27.1"
-weedle2 = "=5.0.0"
+uniffi = { path = "../uniffi-rs/uniffi" }
+uniffi_bindgen = { path = "../uniffi-rs/uniffi_bindgen" }
+uniffi_build = { path = "../uniffi-rs/uniffi_build" }
+uniffi_macros = { path = "../uniffi-rs/uniffi_macros" }
+weedle2 = { path = "../uniffi-rs/weedle2" }
+uniffi-example-arithmetic = { path = "../uniffi-rs/examples/arithmetic" }
+uniffi-example-geometry = { path = "../uniffi-rs/examples/geometry" }
+uniffi-example-rondpoint = { path = "../uniffi-rs/examples/rondpoint" }
+uniffi-example-sprites = { path = "../uniffi-rs/examples/sprites" }
+uniffi-example-todolist = { path = "../uniffi-rs/examples/todolist" }
+
+[patch."https://github.com/FirefoxGraphics/wpf-gpu-raster"]
+wpf-gpu-raster = { path = "../wpf-gpu-raster" }
+
+[patch."https://github.com/gfx-rs/wgpu"]
+wgpu-core = { path = "../wgpu/wgpu-core" }
+wgpu-types = { path = "../wgpu/wgpu-types" }
+wgpu-hal = { path = "../wgpu/wgpu-hal" }
--- ./gfx/wgpu_bindings/Cargo.toml	2024-05-13 17:43:28.605594110 +0200
+++ ./gfx/wgpu_bindings/Cargo.toml	2024-05-13 17:47:06.899231039 +0200
@@ -16,8 +16,7 @@
 
 [dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/wgpu-core"
 # TODO: remove the replay feature on the next update containing https://github.com/gfx-rs/wgpu/pull/5182
 features = ["serde", "replay", "trace", "strict_asserts", "wgsl", "api_log_info"]
 
@@ -25,38 +24,32 @@
 # (We should consider also enabling "vulkan" for Vulkan Portability.)
 [target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/wgpu-core"
 features = ["metal"]
 
 # We want the wgpu-core Direct3D backends on Windows.
 [target.'cfg(windows)'.dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/wgpu-core"
 features = ["dx12"]
 
 # We want the wgpu-core Vulkan backend on Linux and Windows.
 [target.'cfg(any(windows, all(unix, not(any(target_os = "macos", target_os = "ios")))))'.dependencies.wgc]
 package = "wgpu-core"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/wgpu-core"
 features = ["vulkan"]
 
 [dependencies.wgt]
 package = "wgpu-types"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/wgpu-types"
 
 [dependencies.wgh]
 package = "wgpu-hal"
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/wgpu-hal"
 features = ["windows_rs"]
 
 [target.'cfg(windows)'.dependencies.d3d12]
-git = "https://github.com/gfx-rs/wgpu"
-rev = "0c5bebca514eb06d9387f87666c1c658f3f673b4"
+path = "../../../wgpu/d3d12"
 
 [target.'cfg(windows)'.dependencies]
 winapi = "0.3"
--- ./third_party/rust/suggest/Cargo.toml	2024-05-13 19:46:38.701861061 +0200
+++ ./third_party/rust/suggest/Cargo.toml	2024-05-13 19:47:53.090724742 +0200
@@ -39,11 +39,9 @@
 thiserror = "1"
 uniffi = "0.27.1"
 
-[dependencies.error-support]
-path = "../support/error"
-
-[dependencies.interrupt-support]
-path = "../support/interrupt"
+interrupt-support = "0.1.0"
+sql-support = "0.1.0"
+error-support = "0.1.0"
 
 [dependencies.remote_settings]
 path = "../remote_settings"
@@ -59,9 +57,6 @@
 version = "1"
 features = ["derive"]
 
-[dependencies.sql-support]
-path = "../support/sql"
-
 [dependencies.tempfile]
 version = "3.2.0"
 optional = true
