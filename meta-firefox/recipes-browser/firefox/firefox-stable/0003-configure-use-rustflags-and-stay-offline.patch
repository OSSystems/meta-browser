From 33384697ce300a6bd5120ab410615ae1fc4e874a Mon Sep 17 00:00:00 2001
From: skandigraun <skandigraun@gmail.com>
Date: Tue, 30 May 2023 22:17:51 +0200
Subject: [PATCH] update firefox

This patch does the following:
1 - ./build/RunCbindgen.py - cargo is trying to update Cargo.lock, which changes due to
the offline crates this layer is using. It can't be updated with offline flag.

2 - ./build/moz.configure/rust.configure - try to find the targets supported by Yocto,
and make sure that in case it is compiled for target, add the relevant rustflags (cross-linker, etc)

Upstream-Status: Inappropriate

---
 build/RunCbindgen.py               | 2 +-
 build/moz.configure/rust.configure | 7 +++++--
 2 files changed, 6 insertions(+), 3 deletions(-)

--- a/build/moz.configure/rust.configure	2024-08-09 15:58:25.804181897 +0200
+++ b/build/moz.configure/rust.configure	2024-08-09 15:59:45.883158679 +0200
@@ -450,7 +450,7 @@
 @imports(_from="textwrap", _import="dedent")
 @imports(_from="mozbuild.configure.util", _import="LineIO")
 @imports(_from="__builtin__", _import="open")
-def assert_rust_compile(host_or_target, rustc_target, rustc):
+def assert_rust_compile(host_or_target, rustc_target, rustc, is_target = False):
     # Check to see whether our rustc has a reasonably functional stdlib
     # for our chosen target.
     target_arg = "--target=" + rustc_target
@@ -475,6 +475,9 @@
             in_path,
         ]
 
+        if is_target:
+            cmd.extend(os.environ["RUSTFLAGS"].split())
+
         def failed():
             die(
                 dedent(
@@ -550,7 +553,7 @@
     rustc_target = detect_rustc_target(
         target, compiler_info, arm_target, rust_supported_targets, rust_host_env, rust_target_env, "target"
     )
-    assert_rust_compile(target, rustc_target, rustc)
+    assert_rust_compile(target, rustc_target, rustc, True)
     return rustc_target
 
 
--- a/build/RunCbindgen.py	2024-08-09 16:01:20.700947135 +0200
+++ b/build/RunCbindgen.py	2024-08-09 16:02:13.462272971 +0200
@@ -43,6 +43,7 @@
     args = [
         buildconfig.substs["CARGO"],
         "metadata",
+        "--offline",
         "--all-features",
         "--format-version",
         "1",
@@ -50,13 +51,6 @@
         CARGO_TOML,
     ]
 
-    # The Spidermonkey library can be built from a package tarball outside the
-    # tree, so we want to let Cargo create lock files in this case. When built
-    # within a tree, the Rust dependencies have been vendored in so Cargo won't
-    # touch the lock file.
-    if not buildconfig.substs.get("JS_STANDALONE"):
-        args.append("--frozen")
-
     stdout, returncode = _run_process(args)
 
     if returncode != 0:
