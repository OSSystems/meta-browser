From ab45e81a70018b609c5bd763f6a7db493fcb3e5e Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Tue, 11 Apr 2023 15:37:58 +0200
Subject: [PATCH] Revert "Fix std::span autodetection (#7805)"

This reverts commit a6f41944899e65b38ec45ee82f6840248f06b471.

Upstream-Status: Inappropriate
---
 .../src/include/flatbuffers/stl_emulation.h | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

diff --git a/third_party/flatbuffers/src/include/flatbuffers/stl_emulation.h b/third_party/flatbuffers/src/include/flatbuffers/stl_emulation.h
index fd3a8cda..452ddb83 100644
--- a/third_party/flatbuffers/src/include/flatbuffers/stl_emulation.h
+++ b/third_party/flatbuffers/src/include/flatbuffers/stl_emulation.h
@@ -41,18 +41,15 @@
   #include <optional>
 #endif

-#ifndef FLATBUFFERS_USE_STD_SPAN
-  // Testing __cpp_lib_span requires including either <version> or <span>,
-  // both of which were added in C++20.
-  // See: https://en.cppreference.com/w/cpp/utility/feature_test
-  #if defined(__cplusplus) && __cplusplus >= 202002L
-    #define FLATBUFFERS_USE_STD_SPAN 1
-  #endif
-#endif // FLATBUFFERS_USE_STD_SPAN
-
+// The __cpp_lib_span is the predefined feature macro.
 #if defined(FLATBUFFERS_USE_STD_SPAN)
-  #include <array>
-  #include <span>
+    #include <span>
+#elif defined(__cpp_lib_span) && defined(__has_include)
+  #if __has_include(<span>)
+    #include <array>
+    #include <span>
+    #define FLATBUFFERS_USE_STD_SPAN
+  #endif
 #else
   // Disable non-trivial ctors if FLATBUFFERS_SPAN_MINIMAL defined.
   #if !defined(FLATBUFFERS_TEMPLATES_ALIASES)
