Upstream-Status: Backport

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From db69ee58eedba84d1dc833fc301c2ffd54e1be32 Mon Sep 17 00:00:00 2001
From: Peter Kvitek <kvitekp@chromium.org>
Date: Fri, 23 Apr 2021 05:30:07 +0000
Subject: [PATCH] Fixed build with 'use_ozone = false'.

Chrome build would fail in a few places when use_ozone argument is set
to false.

Specifically:

1. Locally defined variables |locks| is not used if no platform and
   no Ozone are defined:
  ./../components/viz/service/display/skia_renderer.cc:2159:9:
  error: unused variable 'locks' [-Werror,-Wunused-variable]
  auto& locks = pending_overlay_locks_.back();

2. Base class defines IsSelectionBufferAvailable() only #ifdef USE_OZONE
  ../../ui/base/clipboard/clipboard_non_backed.h:100:43:
  error: only virtual member functions can be marked 'override'
  bool IsSelectionBufferAvailable() const override;

3. ui/base/clipboard/BUILD.gn includes clipboard_factory_ozone.cc,
   which refers to ClipboardNonBacked in line 53, however,
   clipboard_factory_ozone.cc is only included if use_ozone is in,
   effect see ui/base/clipboard/BUILD.gn:132.

Change-Id: I6a503647699da5039aa28778d722f5e8aa5e941d
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2844777
Reviewed-by: Vasiliy Telezhnikov <vasilyt@chromium.org>
Reviewed-by: Darwin Huang <huangdarwin@chromium.org>
Reviewed-by: Maksim Sisov <msisov@igalia.com>
Commit-Queue: Peter Kvitek <kvitekp@chromium.org>
Cr-Commit-Position: refs/heads/master@{#875531}
---
 components/viz/service/display/skia_renderer.cc | 5 ++++-
 ui/base/clipboard/BUILD.gn                      | 8 ++++++++
 ui/base/clipboard/clipboard_non_backed.cc       | 2 ++
 ui/base/clipboard/clipboard_non_backed.h        | 2 ++
 4 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/components/viz/service/display/skia_renderer.cc b/components/viz/service/display/skia_renderer.cc
index 75a2af2c485a..6d7ff83e5663 100644
--- a/components/viz/service/display/skia_renderer.cc
+++ b/components/viz/service/display/skia_renderer.cc
@@ -2164,7 +2164,6 @@ void SkiaRenderer::ScheduleOverlays() {
   if (current_frame()->overlay_list.empty())
     return;
 
-  auto& locks = pending_overlay_locks_.back();
   std::vector<gpu::SyncToken> sync_tokens;
 
 #if !defined(OS_WIN)
@@ -2176,6 +2175,7 @@ void SkiaRenderer::ScheduleOverlays() {
   // switched over to OverlayProcessor.
   // TODO(weiliangc): Remove this when CrOS and Android SurfaceControl switch
   // to OverlayProcessor as well.
+  auto& locks = pending_overlay_locks_.back();
   for (auto& overlay : current_frame()->overlay_list) {
     // Resources will be unlocked after the next SwapBuffers() is completed.
     locks.emplace_back(resource_provider(), overlay.resource_id);
@@ -2190,6 +2190,7 @@ void SkiaRenderer::ScheduleOverlays() {
     DCHECK(!overlay.mailbox.IsZero());
   }
 #elif defined(OS_WIN)
+  auto& locks = pending_overlay_locks_.back();
   for (auto& dc_layer_overlay : current_frame()->overlay_list) {
     for (size_t i = 0; i < DCLayerOverlay::kNumResources; ++i) {
       ResourceId resource_id = dc_layer_overlay.resources[i];
@@ -2210,6 +2211,7 @@ void SkiaRenderer::ScheduleOverlays() {
     DCHECK(!dc_layer_overlay.mailbox[0].IsZero());
   }
 #elif defined(OS_APPLE)
+  auto& locks = pending_overlay_locks_.back();
   for (CALayerOverlay& ca_layer_overlay : current_frame()->overlay_list) {
     if (ca_layer_overlay.rpdq) {
       PrepareRenderPassOverlay(&ca_layer_overlay);
@@ -2244,6 +2246,7 @@ void SkiaRenderer::ScheduleOverlays() {
     return;
   }
   // Only Wayland uses this code path.
+  auto& locks = pending_overlay_locks_.back();
   for (auto& overlay : current_frame()->overlay_list) {
     // Resources will be unlocked after the next SwapBuffers() is completed.
     locks.emplace_back(resource_provider(), overlay.resource_id);
diff --git a/ui/base/clipboard/BUILD.gn b/ui/base/clipboard/BUILD.gn
index e710361b70b7..86e7a85d7b7b 100644
--- a/ui/base/clipboard/BUILD.gn
+++ b/ui/base/clipboard/BUILD.gn
@@ -159,6 +159,14 @@ component("clipboard") {
     # TODO(crbug.com/1096425): Cleanup when non-Ozone path gets dropped.
     if (use_ozone || use_x11) {
       sources += [ "clipboard_factory_ozone.cc" ]
+      if (!use_ozone) {
+        sources += [
+          "clipboard_data.cc",
+          "clipboard_data.h",
+          "clipboard_non_backed.cc",
+          "clipboard_non_backed.h",
+        ]
+      }
       deps += [ "//ui/base" ]
     }
   }
diff --git a/ui/base/clipboard/clipboard_non_backed.cc b/ui/base/clipboard/clipboard_non_backed.cc
index fcf249c6b325..c6009c589bc0 100644
--- a/ui/base/clipboard/clipboard_non_backed.cc
+++ b/ui/base/clipboard/clipboard_non_backed.cc
@@ -688,6 +688,7 @@ void ClipboardNonBacked::ReadData(const ClipboardFormatType& format,
 #endif
 }
 
+#if defined(USE_OZONE)
 bool ClipboardNonBacked::IsSelectionBufferAvailable() const {
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   return false;
@@ -695,6 +696,7 @@ bool ClipboardNonBacked::IsSelectionBufferAvailable() const {
   return true;
 #endif
 }
+#endif  // defined(USE_OZONE)
 
 void ClipboardNonBacked::WritePortableRepresentations(
     ClipboardBuffer buffer,
diff --git a/ui/base/clipboard/clipboard_non_backed.h b/ui/base/clipboard/clipboard_non_backed.h
index 6194d63d2add..6c6e3f16a02a 100644
--- a/ui/base/clipboard/clipboard_non_backed.h
+++ b/ui/base/clipboard/clipboard_non_backed.h
@@ -97,7 +97,9 @@ class COMPONENT_EXPORT(UI_BASE_CLIPBOARD) ClipboardNonBacked
   void ReadData(const ClipboardFormatType& format,
                 const DataTransferEndpoint* data_dst,
                 std::string* result) const override;
+#if defined(USE_OZONE)
   bool IsSelectionBufferAvailable() const override;
+#endif  // defined(USE_OZONE)
   void WritePortableRepresentations(
       ClipboardBuffer buffer,
       const ObjectMap& objects,
-- 
2.25.1

