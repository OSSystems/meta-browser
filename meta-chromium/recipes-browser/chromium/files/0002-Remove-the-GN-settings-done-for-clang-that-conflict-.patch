From cab3c06864569577158626e500b2253687fc09ba Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Mon, 29 Apr 2019 12:00:19 +0300
Subject: [PATCH] Remove the GN settings done for clang that conflict with OE

clang cross compiler that is build with meta-clang has lot of these
settings built-in and specifying them here confuses the compiler

--target option and -no-canonical-prefixes options result in clang

finding the headers in target sysroot

Upstream-Status: Inappropriate [OE-Specific]

Signed-off-by: Khem Raj <raj.khem@gmail.com>
Rebased-by: Maksim Sisov <msisov@igalia.com>
---
 build/config/compiler/BUILD.gn | 36 ----------------------------------
 1 file changed, 36 deletions(-)

diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index ae42271d99e49..eb397d8722994 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -895,10 +895,6 @@ config("compiler_cpu_abi") {
         ]
       }
     } else if (current_cpu == "arm") {
-      if (is_clang && !is_android && !is_nacl) {
-        cflags += [ "--target=arm-linux-gnueabihf" ]
-        ldflags += [ "--target=arm-linux-gnueabihf" ]
-      }
       if (!is_nacl) {
         cflags += [
           "-march=$arm_arch",
@@ -908,11 +904,6 @@ config("compiler_cpu_abi") {
       if (arm_tune != "") {
         cflags += [ "-mtune=$arm_tune" ]
       }
-    } else if (current_cpu == "arm64") {
-      if (is_clang && !is_android && !is_nacl && !is_fuchsia) {
-        cflags += [ "--target=aarch64-linux-gnu" ]
-        ldflags += [ "--target=aarch64-linux-gnu" ]
-      }
     } else if (current_cpu == "mipsel" && !is_nacl) {
       ldflags += [ "-Wl,--hash-style=sysv" ]
       if (custom_toolchain == "") {
@@ -920,9 +911,6 @@ config("compiler_cpu_abi") {
           if (is_android) {
             cflags += [ "--target=mipsel-linux-android" ]
             ldflags += [ "--target=mipsel-linux-android" ]
-          } else {
-            cflags += [ "--target=mipsel-linux-gnu" ]
-            ldflags += [ "--target=mipsel-linux-gnu" ]
           }
         } else {
           cflags += [ "-EL" ]
@@ -1002,8 +990,6 @@ config("compiler_cpu_abi") {
       ldflags += [ "-Wl,--hash-style=sysv" ]
       if (custom_toolchain == "") {
         if (is_clang) {
-          cflags += [ "--target=mips-linux-gnu" ]
-          ldflags += [ "--target=mips-linux-gnu" ]
         } else {
           cflags += [ "-EB" ]
           ldflags += [ "-EB" ]
@@ -1051,9 +1037,6 @@ config("compiler_cpu_abi") {
           if (is_android) {
             cflags += [ "--target=mips64el-linux-android" ]
             ldflags += [ "--target=mips64el-linux-android" ]
-          } else {
-            cflags += [ "--target=mips64el-linux-gnuabi64" ]
-            ldflags += [ "--target=mips64el-linux-gnuabi64" ]
           }
         } else {
           cflags += [
@@ -1111,8 +1094,6 @@ config("compiler_cpu_abi") {
       ldflags += [ "-Wl,--hash-style=sysv" ]
       if (custom_toolchain == "") {
         if (is_clang) {
-          cflags += [ "--target=mips64-linux-gnuabi64" ]
-          ldflags += [ "--target=mips64-linux-gnuabi64" ]
         } else {
           cflags += [
             "-EB",
@@ -1284,23 +1265,6 @@ config("compiler_deterministic") {
       }
     }
   }
-
-  # Tells the compiler not to use absolute paths when passing the default
-  # paths to the tools it invokes. We don't want this because we don't
-  # really need it and it can mess up the goma cache entries.
-  if (is_clang && !is_nacl) {
-    cflags += [ "-no-canonical-prefixes" ]
-
-    # Same for links: Let the compiler driver invoke the linker
-    # with a relative path and pass relative paths to built-in
-    # libraries. Not needed on Windows because we call the linker
-    # directly there, not through the compiler driver.
-    # We don't link on goma, so this change is just for cleaner
-    # internal linker invocations, for people who work on the build.
-    if (!is_win) {
-      ldflags += [ "-no-canonical-prefixes" ]
-    }
-  }
 }
 
 config("clang_revision") {
--
2.25.1
