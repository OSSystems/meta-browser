Upstream-Status: Inappropriate

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From d18ab715039ca499a545b3603cebd26d65a3f8ad Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Fri, 4 Jun 2021 14:26:57 +0300
Subject: [PATCH] limit number of LTO jobs.

--thinlto-jobs accepts "all" only since llvm 13. Dunfell
branch uses quite old llvm that doesn't support this keyword.
Thus, use the previously used number of threads.
---
 build/config/compiler/BUILD.gn     | 11 +++++------
 build/config/compiler/compiler.gni |  5 +++++
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 6a04153cb240..bb86f046ef31 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -644,7 +644,7 @@ config("compiler") {
 
     if (is_win) {
       ldflags += [
-        "/opt:lldltojobs=all",
+        "/opt:lldltojobs=" + max_jobs_per_link,
         "-mllvm:-import-instr-limit=$import_instr_limit",
         "/lldltocache:" +
             rebase_path("$root_out_dir/thinlto-cache", root_build_dir),
@@ -657,11 +657,10 @@ config("compiler") {
       # usage in crbug.com/1038040. Note this will increase build time in
       # Chrome OS.
 
-      # In ThinLTO builds, we run at most one link process at a time,
-      # and let it use all cores.
-      # TODO(thakis): Check if '=0' (that is, number of cores, instead
-      # of "all" which means number of hardware threads) is faster.
-      ldflags += [ "-Wl,--thinlto-jobs=all" ]
+      # Limit the parallelism to avoid too aggressive competition between
+      # linker jobs. This is still suboptimal to a potential dynamic
+      # resource allocation scheme, but should be good enough.
+      ldflags += [ "-Wl,--thinlto-jobs=" + max_jobs_per_link ]
 
       ldflags += [
         "-Wl,--thinlto-cache-dir=" +
diff --git a/build/config/compiler/compiler.gni b/build/config/compiler/compiler.gni
index 96a18d91a3f6..f9457ee4508a 100644
--- a/build/config/compiler/compiler.gni
+++ b/build/config/compiler/compiler.gni
@@ -76,6 +76,11 @@ declare_args() {
   # If true, use Goma for ThinLTO code generation where applicable.
   use_goma_thin_lto = false

+  # Limit the number of jobs (threads/processes) the linker is allowed
+  # to use (for linkers that support this).
+  # Upstream chromium uses "all" keyword that is available since llvm 13.
+  max_jobs_per_link = 8
+
   # Whether we're using a sample profile collected on an architecture different
   # than the one we're compiling for.
   #
-- 
2.25.1

