From b49388c4ee899f7a424a1f1df52868eed1e9c83f Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Tue, 25 Jun 2024 11:06:19 +0000
Subject: [PATCH] Drop GN compiler settings conflicting with OE

The clang cross compiler built with meta-clang has lots of these
settings built-in and specifying them with GN confuses the compiler:
* The --target and -no-canonical-prefixes options result in clang
  finding the headers in target sysroot.
* GN tries to guess the right values for march/mtune/float-abi, but the
  OE config machinary has computed these values already and fed it via
  compiler cmdline to the Chromium build.

Upstream-Status: Inappropriate [OE-Specific]
Signed-off-by: Khem Raj <raj.khem@gmail.com>
Signed-off-by: Max Ihlenfeldt <max@igalia.com>
---
 build/config/compiler/BUILD.gn | 48 ----------------------------------
 1 file changed, 48 deletions(-)

diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index f162751..356a8d4 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1219,27 +1219,6 @@ config("compiler_cpu_abi") {
           "-msse3",
         ]
       }
-    } else if (current_cpu == "arm") {
-      if (is_clang && !is_android && !is_nacl &&
-          !(is_chromeos_lacros && is_chromeos_device)) {
-        cflags += [ "--target=arm-linux-gnueabihf" ]
-        ldflags += [ "--target=arm-linux-gnueabihf" ]
-      }
-      if (!is_nacl) {
-        cflags += [
-          "-march=$arm_arch",
-          "-mfloat-abi=$arm_float_abi",
-        ]
-      }
-      if (arm_tune != "") {
-        cflags += [ "-mtune=$arm_tune" ]
-      }
-    } else if (current_cpu == "arm64") {
-      if (is_clang && !is_android && !is_nacl && !is_fuchsia &&
-          !(is_chromeos_lacros && is_chromeos_device)) {
-        cflags += [ "--target=aarch64-linux-gnu" ]
-        ldflags += [ "--target=aarch64-linux-gnu" ]
-      }
     } else if (current_cpu == "mipsel" && !is_nacl) {
       ldflags += [ "-Wl,--hash-style=sysv" ]
       if (custom_toolchain == "") {
@@ -1247,9 +1226,6 @@ config("compiler_cpu_abi") {
           if (is_android) {
             cflags += [ "--target=mipsel-linux-android" ]
             ldflags += [ "--target=mipsel-linux-android" ]
-          } else {
-            cflags += [ "--target=mipsel-linux-gnu" ]
-            ldflags += [ "--target=mipsel-linux-gnu" ]
           }
         } else {
           cflags += [ "-EL" ]
@@ -1329,8 +1305,6 @@ config("compiler_cpu_abi") {
       ldflags += [ "-Wl,--hash-style=sysv" ]
       if (custom_toolchain == "") {
         if (is_clang) {
-          cflags += [ "--target=mips-linux-gnu" ]
-          ldflags += [ "--target=mips-linux-gnu" ]
         } else {
           cflags += [ "-EB" ]
           ldflags += [ "-EB" ]
@@ -1378,9 +1352,6 @@ config("compiler_cpu_abi") {
           if (is_android) {
             cflags += [ "--target=mips64el-linux-android" ]
             ldflags += [ "--target=mips64el-linux-android" ]
-          } else {
-            cflags += [ "--target=mips64el-linux-gnuabi64" ]
-            ldflags += [ "--target=mips64el-linux-gnuabi64" ]
           }
         } else {
           cflags += [
@@ -1438,8 +1409,6 @@ config("compiler_cpu_abi") {
       ldflags += [ "-Wl,--hash-style=sysv" ]
       if (custom_toolchain == "") {
         if (is_clang) {
-          cflags += [ "--target=mips64-linux-gnuabi64" ]
-          ldflags += [ "--target=mips64-linux-gnuabi64" ]
         } else {
           cflags += [
             "-EB",
@@ -1608,23 +1577,6 @@ config("compiler_deterministic") {
       }
     }
   }
-
-  # Tells the compiler not to use absolute paths when passing the default
-  # paths to the tools it invokes. We don't want this because we don't
-  # really need it and it can mess up the RBE cache entries.
-  if (is_clang && (!is_nacl || is_nacl_saigo)) {
-    cflags += [ "-no-canonical-prefixes" ]
-
-    # Same for links: Let the compiler driver invoke the linker
-    # with a relative path and pass relative paths to built-in
-    # libraries. Not needed on Windows because we call the linker
-    # directly there, not through the compiler driver.
-    # We don't link on RBE, so this change is just for cleaner
-    # internal linker invocations, for people who work on the build.
-    if (!is_win) {
-      ldflags += [ "-no-canonical-prefixes" ]
-    }
-  }
 }

 config("clang_revision") {
