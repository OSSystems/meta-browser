From 905cdd836a9968e13016ee4deabb65b122cd2eb5 Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Thu, 13 Apr 2023 12:08:01 +0000
Subject: [PATCH] Only default operator== on declaration

The requirement that the comparison operator can only be defaulted on
the first declaration was removed in P2085R0, which clang only supports
in versions 14 and above. Because dunfell still uses clang 12, we need
to fix the few occurrences where this requirement isn't met.

Upstream-Status: Unknown
Signed-off-by: Max Ihlenfeldt <max@igalia.com>
---
 .../core/browser/affiliation/affiliation_fetcher_base.cc     | 3 ---
 .../core/browser/affiliation/affiliation_fetcher_base.h      | 3 ---
 .../core/browser/affiliation/affiliation_fetcher_interface.h | 2 +-
 printing/page_setup.cc                                       | 4 ----
 printing/page_setup.h                                        | 4 ++--
 printing/print_settings.cc                                   | 5 -----
 printing/print_settings.h                                    | 4 ++--
 7 files changed, 5 insertions(+), 20 deletions(-)

diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
index 5d5b95e0d787a..3a499529885be 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
@@ -179,7 +179,4 @@ void AffiliationFetcherBase::OnSimpleLoaderComplete(
   }
 }

-bool operator==(const AffiliationFetcherInterface::RequestInfo& lhs,
-                const AffiliationFetcherInterface::RequestInfo& rhs) = default;
-
 }  // namespace password_manager
diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
index baa57ab9fb852..fe6e322918e82 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
@@ -80,9 +80,6 @@ class AffiliationFetcherBase : public virtual AffiliationFetcherInterface {
   std::unique_ptr<network::SimpleURLLoader> simple_url_loader_;
 };

-bool operator==(const AffiliationFetcherInterface::RequestInfo& lhs,
-                const AffiliationFetcherInterface::RequestInfo& rhs);
-
 }  // namespace password_manager

 #endif  // COMPONENTS_PASSWORD_MANAGER_CORE_BROWSER_AFFILIATION_AFFILIATION_FETCHER_BASE_H_
diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h b/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
index 5bf889f5d940d..946eabe8dce6e 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
@@ -20,7 +20,7 @@ class AffiliationFetcherInterface {
     bool change_password_info = false;
     bool psl_extension_list = false;

-    friend bool operator==(const RequestInfo&, const RequestInfo&);
+    bool operator==(const RequestInfo& other) const = default;
   };

   AffiliationFetcherInterface() = default;
diff --git a/printing/page_setup.cc b/printing/page_setup.cc
index c104f44cdc6b0..93d3d60078aa0 100644
--- a/printing/page_setup.cc
+++ b/printing/page_setup.cc
@@ -49,8 +49,6 @@ PageMargins::PageMargins(int header,
       top(top),
       bottom(bottom) {}

-bool PageMargins::operator==(const PageMargins& other) const = default;
-
 void PageMargins::Clear() {
   header = 0;
   footer = 0;
@@ -77,8 +75,6 @@ PageSetup::PageSetup(const PageSetup& other) = default;

 PageSetup::~PageSetup() = default;

-bool PageSetup::operator==(const PageSetup& other) const = default;
-
 // static
 gfx::Rect PageSetup::GetSymmetricalPrintableArea(
     const gfx::Size& page_size,
diff --git a/printing/page_setup.h b/printing/page_setup.h
index 0f227753c74c7..c324044aea9e3 100644
--- a/printing/page_setup.h
+++ b/printing/page_setup.h
@@ -16,7 +16,7 @@ class COMPONENT_EXPORT(PRINTING) PageMargins {
   PageMargins();
   PageMargins(int header, int footer, int left, int right, int top, int bottom);

-  bool operator==(const PageMargins& other) const;
+  bool operator==(const PageMargins& other) const = default;

   void Clear();

@@ -44,7 +44,7 @@ class COMPONENT_EXPORT(PRINTING) PageSetup {
   PageSetup(const PageSetup& other);
   ~PageSetup();

-  bool operator==(const PageSetup& other) const;
+  bool operator==(const PageSetup& other) const = default;

   // Gets a symmetrical printable area.
   static gfx::Rect GetSymmetricalPrintableArea(const gfx::Size& page_size,
diff --git a/printing/print_settings.cc b/printing/print_settings.cc
index 055185c30eb8f..4cb49433f70ea 100644
--- a/printing/print_settings.cc
+++ b/printing/print_settings.cc
@@ -266,9 +266,6 @@ absl::optional<bool> IsColorModelSelected(mojom::ColorModel color_model) {
   // all ColorModel values are determinantly handled.
 }

-bool PrintSettings::RequestedMedia::operator==(
-    const PrintSettings::RequestedMedia& other) const = default;
-
 // Global SequenceNumber used for generating unique cookie values.
 static base::AtomicSequenceNumber cookie_seq;

@@ -325,8 +322,6 @@ PrintSettings& PrintSettings::operator=(const PrintSettings& settings) {

 PrintSettings::~PrintSettings() = default;

-bool PrintSettings::operator==(const PrintSettings& other) const = default;
-
 void PrintSettings::Clear() {
   ranges_.clear();
   selection_only_ = false;
diff --git a/printing/print_settings.h b/printing/print_settings.h
index db3af5770efc8..caacf1c577b4b 100644
--- a/printing/print_settings.h
+++ b/printing/print_settings.h
@@ -63,7 +63,7 @@ class COMPONENT_EXPORT(PRINTING) PrintSettings {
   // Media properties requested by the user. Default instance represents
   // default media selection.
   struct RequestedMedia {
-    bool operator==(const RequestedMedia& other) const;
+    bool operator==(const RequestedMedia& other) const = default;
     bool IsDefault() const {
       return size_microns.IsEmpty() && vendor_id.empty();
     }
@@ -83,7 +83,7 @@ class COMPONENT_EXPORT(PRINTING) PrintSettings {
   PrintSettings& operator=(const PrintSettings&);
   ~PrintSettings();

-  bool operator==(const PrintSettings& other) const;
+  bool operator==(const PrintSettings& other) const = default;

   // Reinitialize the settings to the default values.
   void Clear();
