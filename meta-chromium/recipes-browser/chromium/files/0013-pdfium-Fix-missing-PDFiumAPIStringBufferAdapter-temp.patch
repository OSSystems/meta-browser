From 20deec0782b78d1c8302764e852ff174f7a4f564 Mon Sep 17 00:00:00 2001
From: Ariel D'Alessandro <ariel.dalessandro@collabora.com>
Date: Fri, 15 Nov 2024 00:49:27 -0300
Subject: [PATCH] pdfium: Fix missing PDFiumAPIStringBufferAdapter template
 argument

Fix the following compilation error:

```
| ../../pdf/pdfium/pdfium_api_wrappers.cc:150:32: error: alias template
  'PDFiumAPIStringBufferAdapter' requires template arguments; argument
  deduction only allowed for class templates
|   150 |   PDFiumAPIStringBufferAdapter adapter(&name, expected_size,
|       |                                ^
| ../../pdf/pdfium/pdfium_api_string_buffer_adapter.h:173:1: note: template
  is declared here
|   173 | using PDFiumAPIStringBufferAdapter =
|       | ^
| 1 error generated.
```

This patch will be dropped once clang >= 19.1.0 is available, which
includes support for class template argument deduction (CTAD) for type
alias templates (P1814R0 [0]) (#54051 [1]).

Note that currently meta-clang [2] provides the clang version `18.1.6`.

[0] https://wg21.link/p1814r0
[1] https://github.com/llvm/llvm-project/issues/54051
[2] https://github.com/kraj/meta-clang

Upstream-Status: Inappropriate [specific to older versions of clang]
Signed-off-by: Ariel D'Alessandro <ariel.dalessandro@collabora.com>
---
 pdf/pdfium/pdfium_api_wrappers.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pdf/pdfium/pdfium_api_wrappers.cc b/pdf/pdfium/pdfium_api_wrappers.cc
index b13fe20875e61..60c973b7152ab 100644
--- a/pdf/pdfium/pdfium_api_wrappers.cc
+++ b/pdf/pdfium/pdfium_api_wrappers.cc
@@ -147,7 +147,7 @@ std::u16string GetPageObjectMarkName(FPDF_PAGEOBJECTMARK mark) {

   // Number of characters, including the NUL.
   const size_t expected_size = base::checked_cast<size_t>(buflen_bytes / 2);
-  PDFiumAPIStringBufferAdapter adapter(&name, expected_size,
+  PDFiumAPIStringBufferAdapter<std::u16string> adapter(&name, expected_size,
                                        /*check_expected_size=*/true);
   unsigned long actual_buflen_bytes = 0;  // NOLINT(runtime/int)
   bool result =
