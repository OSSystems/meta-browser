Upstream-Status: Backport

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 729cbcf172c81076d418fdb8ee2c19791e7369de Mon Sep 17 00:00:00 2001
From: Alexis Hetu <sugoi@google.com>
Date: Fri, 23 Jul 2021 11:18:18 -0400
Subject: [PATCH] Make Display and X11 available in the same build
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Chromium can use the 'use_ozone' and 'use_x11' build flags
simultaneously, so we need the Vulkan display to still be
selectable, even when the 'use_x11' flag is used.

This is required to make SwANGLE work with Ozone/Wayland, which
is going to use EGL_PLATFORM_VULKAN_DISPLAY_MODE_HEADLESS_ANGLE
when SwANGLE is requested.

Bug: chromium:1231934
Change-Id: I2ac1d3d9bc231608d7f77e9a2540f4c538840076
Reviewed-on: https://chromium-review.googlesource.com/c/angle/angle/+/3049351
Reviewed-by: Jamie Madill <jmadill@chromium.org>
Reviewed-by: Shahbaz Youssefi <syoussefi@chromium.org>
Commit-Queue: Alexis HÃ©tu <sugoi@chromium.org>
---
 BUILD.gn                       | 8 ++++----
 third_party/angle/gni/angle.gni                  | 4 ++--
 third_party/angle/src/libANGLE/Display.cpp       | 6 +++---
 third_party/angle/util/display/DisplayPixmap.cpp | 2 +-
 third_party/angle/util/display/DisplayWindow.cpp | 2 +-
 5 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/third_party/angle/BUILD.gn b/third_party/angle/BUILD.gn
index 51fc98ab3..788ad1eea 100644
--- a/third_party/angle/BUILD.gn
+++ b/third_party/angle/BUILD.gn
@@ -141,10 +141,10 @@ config("internal_config") {
   if (angle_use_vulkan_null_display) {
     defines += [ "ANGLE_USE_VULKAN_NULL_DISPLAY" ]
   } else if (angle_use_vulkan_display) {
-    defines += [
-      "ANGLE_USE_VULKAN_DISPLAY",
-      "EGL_NO_X11",
-    ]
+    defines += [ "ANGLE_USE_VULKAN_DISPLAY" ]
+    if (!angle_use_x11) {
+      defines += [ "EGL_NO_X11" ]
+    }
     if (angle_vulkan_display_mode == "simple") {
       defines += [ "ANGLE_VULKAN_DISPLAY_MODE_SIMPLE" ]
     } else if (angle_vulkan_display_mode == "headless") {

diff --git a/third_party/angle/gni/angle.gni b/third_party/angle/gni/angle.gni
index 8938b6172..9b0ca3af3 100644
--- a/third_party/angle/gni/angle.gni
+++ b/third_party/angle/gni/angle.gni
@@ -41,8 +41,7 @@ if (angle_has_build) {
   }
 
   angle_use_x11 = use_x11 && !is_ggp
-  angle_use_vulkan_display =
-      is_linux && !use_x11 && !is_ggp && (!use_ozone || is_chromecast)
+  angle_use_vulkan_display = is_linux && !is_ggp
 } else {
   declare_args() {
     is_ubsan = false
@@ -60,7 +59,7 @@ if (angle_has_build) {
   }
 
   declare_args() {
-    angle_use_vulkan_display = is_linux && !angle_use_x11 && !is_ggp
+    angle_use_vulkan_display = is_linux && !is_ggp
   }
 }
 
diff --git a/third_party/angle/src/libANGLE/Display.cpp b/third_party/angle/src/libANGLE/Display.cpp
index 5bb886cb1..4ab94f1de 100644
--- a/third_party/angle/src/libANGLE/Display.cpp
+++ b/third_party/angle/src/libANGLE/Display.cpp
@@ -390,8 +390,8 @@ rx::DisplayImpl *CreateDisplayFromAttribs(EGLAttrib displayType,
                 impl = rx::CreateVulkanXcbDisplay(state);
                 break;
             }
-            break;
-#        elif defined(ANGLE_USE_VULKAN_DISPLAY)
+#        endif
+#        if defined(ANGLE_USE_VULKAN_DISPLAY)
             if (platformType == EGL_PLATFORM_VULKAN_DISPLAY_MODE_SIMPLE_ANGLE &&
                 rx::IsVulkanSimpleDisplayAvailable())
             {
@@ -407,8 +407,8 @@ rx::DisplayImpl *CreateDisplayFromAttribs(EGLAttrib displayType,
                 // Not supported creation type on vulkan display, fail display creation.
                 impl = nullptr;
             }
-            break;
 #        endif
+            break;
 #    elif defined(ANGLE_PLATFORM_ANDROID)
             if (rx::IsVulkanAndroidDisplayAvailable())
             {
diff --git a/third_party/angle/util/display/DisplayPixmap.cpp b/third_party/angle/util/display/DisplayPixmap.cpp
index 27d2734a3..67c087455 100644
--- a/third_party/angle/util/display/DisplayPixmap.cpp
+++ b/third_party/angle/util/display/DisplayPixmap.cpp
@@ -8,7 +8,7 @@
 
 #include "util/OSPixmap.h"
 
-#if defined(ANGLE_USE_VULKAN_DISPLAY)
+#if defined(ANGLE_USE_VULKAN_DISPLAY) && defined(EGL_NO_X11)
 OSPixmap *CreateOSPixmap()
 {
     return nullptr;
diff --git a/third_party/angle/util/display/DisplayWindow.cpp b/third_party/angle/util/display/DisplayWindow.cpp
index d11f52262..6cd0053cb 100644
--- a/third_party/angle/util/display/DisplayWindow.cpp
+++ b/third_party/angle/util/display/DisplayWindow.cpp
@@ -79,7 +79,7 @@ void DisplayWindow::signalTestEvent()
 }
 
 // static
-#if defined(ANGLE_USE_VULKAN_DISPLAY)
+#if defined(ANGLE_USE_VULKAN_DISPLAY) && defined(EGL_NO_X11)
 OSWindow *OSWindow::New()
 {
     return new DisplayWindow();
-- 
2.25.1

